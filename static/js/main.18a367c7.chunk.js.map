{"version":3,"sources":["app/components/ui/navBar.jsx","app/layouts/main.jsx","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/API/fake.api/professions.api.js","app/API/fake.api/user.api.js","app/API/fake.api/qualities.api.js","app/API/fake.api/comments.api.js","app/API/index.js","app/components/common/form/selectForm.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/ui/cards/meetingsCard.jsx","app/components/ui/cards/userCard.jsx","app/components/ui/qualities/qualities.jsx","app/services/http.service.js","app/services/quality.service.js","app/hooks/useQuality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/cards/qualitiesCard.jsx","app/components/common/form/textAreaField.jsx","app/components/ui/cards/comment.jsx","app/utils/commentDate.js","app/components/ui/cards/commentsList.jsx","app/components/ui/cards/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/services/user.service.js","app/hooks/useUsers.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/layouts/users.jsx","app/App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","Main","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","setData","setErrors","useEffect","validateConfig","Object","keys","isValid","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","handleChange","onSubmit","e","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectForm","defaultOption","options","optionsArray","Array","isArray","map","optionName","option","RadioField","MultiSelectField","defaultValue","defaultValueArray","isMulti","closeMenuOnSelect","classNamePrefix","RegisterForm","license","setQualities","setProfessions","api","then","Login","useParams","formType","setFormType","toggleFormType","role","MeetingsCard","UserCard","history","useHistory","location","pathname","src","substring","alt","width","height","Qualities","axios","defaults","baseURL","apiEndpoint","interceptors","response","use","res","status","toast","reject","httpService","get","post","put","delete","qualityEndpoint","qualityService","a","QualityContext","React","createContext","QualityProvider","isLoading","setIsLoading","setError","errorCatcher","getQualitiesList","Provider","getQuality","q","useContext","userQualities","quality","qualitie","QualitiesCard","TextAreaField","rows","Comment","addNewComment","newCommentData","setNewCommentData","takeDate","createdAt","difference","commentDate","getHours","getMinutes","month","monthName","getMonth","getDate","getFullYear","CommentsList","removeComment","sortedComments","_","orderBy","comment","Comments","commentsForUser","setCommentsForUser","commentId","UserPage","setUser","setUsers","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","range","aria-label","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","BookMark","rest","TableHeader","onSort","selectedSort","columns","column","path","order","undefined","scope","currentPath","TableBody","renderContent","component","Table","professionService","ProfessionContext","ProfessionProvider","getProfessionsList","getProfession","p","Profession","prof","UsersTable","onToggleBookMark","onDelete","userService","UserContext","UserProvider","getUsers","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","searchData","setSearchData","useLocation","search","query","sortBy","setSortBy","filteredUsers","toLowerCase","includes","count","usersCrop","pageNumber","startIndex","slice","take","paginate","placeholder","newArray","pageIndex","EditUserPage","handleSubmit","edituserdata","professionsArray","qualitiesArray","userQualitie","editUserData","replace","Users","params","edit","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18a367c7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <ul className=\"nav nav-pills\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/\">\n          Main\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/login\">\n          Login\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/users\">\n          Users\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Main = () => {\n  return <h1>Main</h1>;\n};\n\nexport default Main;\n","export function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\": {\n        if (typeof data === \"boolean\") {\n          statusValidate = !data;\n        } else {\n          statusValidate = data.trim() === \"\";\n        }\n        break;\n      }\n      case \"isEmail\": {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n        statusValidate = !emailRegExp.test(data);\n        break;\n      }\n      case \"isCapitalSymbol\": {\n        const capitalRegExp = /[A-Z]+/g;\n        statusValidate = !capitalRegExp.test(data);\n        break;\n      }\n      case \"isContainDigit\": {\n        const digitRegExp = /\\d+/g;\n        statusValidate = !digitRegExp.test(data);\n        break;\n      }\n      case \"min\": {\n        statusValidate = data.length < config.value;\n        break;\n      }\n      default:\n        break;\n    }\n\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? \"text\" : type}\n          value={value}\n          name={name}\n          id={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {type === \"password\" && (\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}></i>\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\"\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n  const handleChange = () => {\n    onChange({ name: name, value: !value });\n  };\n\n  const getInputClasses = () => {\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  return (\n    <div className=\"form-check mb-4\">\n      <input\n        className={getInputClasses()}\n        type=\"checkbox\"\n        value=\"\"\n        id={name}\n        onChange={handleChange}\n        checked={value}\n      />\n      <label className=\"form-check-label\" htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nCheckBoxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useState, useEffect } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n  const [data, setData] = useState({ email: \"\", password: \"\", stayOn: false });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    },\n    password: {\n      isRequired: { message: \"Пароль обязателен для заполнения\" },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: { message: \"Пароль должен содержать хотя бы одну цифру\" },\n      min: { message: \"Пароль должен содержать минимум 8 символов\", value: 8 }\n    }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\n        Оставаться в системе\n      </CheckBoxField>\n      <button disabled={!isValid} className=\"btn btn-primary w-100 mx-auto\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","export const professionsObject = {\n  doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n  waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n  physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n  engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n  actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n  cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n  { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n  { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n  { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n  { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n  { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n  { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n  tedious: {\n    _id: \"67rdca3eeb7f6fgeed471198\",\n    name: \"Нудила\",\n    color: \"primary\"\n  },\n  strange: {\n    _id: \"67rdca3eeb7f6fgeed471100\",\n    name: \"Странный\",\n    color: \"secondary\"\n  },\n  buller: {\n    _id: \"67rdca3eeb7f6fgeed4711012\",\n    name: \"Троль\",\n    color: \"success\"\n  },\n  alcoholic: {\n    _id: \"67rdca3eeb7f6fgeed471101\",\n    name: \"Алкоголик\",\n    color: \"danger\"\n  },\n  handsome: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Красавчик\",\n    color: \"info\"\n  },\n  uncertain: {\n    _id: \"67rdca3eeb7f6fgeed471103\",\n    name: \"Неуверенный\",\n    color: \"dark\"\n  }\n};\n\nconst users = [\n  {\n    _id: \"67rdca3eeb7f6fgeed471815\",\n    name: \"Джон Дориан\",\n    email: \"johndorian@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471816\",\n    name: \"Кокс\",\n    email: \"koks@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471817\",\n    name: \"Боб Келсо\",\n    email: \"bobkelso@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471818\",\n    name: \"Рэйчел Грин\",\n    email: \"rachelgreene@fastcompany.ru\",\n    sex: \"female\",\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471819\",\n    name: \"Шелдон Купер\",\n    email: \"sheldoncooper@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471820\",\n    name: \"Леонард Хофстедтер\",\n    email: \"leonardhofstedter@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471821\",\n    name: \"Говард Воловиц\",\n    email: \"howardwolowitz@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471822\",\n    name: \"Никола Тесла\",\n    email: \"nikolatesla@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471823\",\n    name: \"Моника Геллер\",\n    email: \"monicageller@fastcompany.ru\",\n    sex: \"female\",\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471824\",\n    name: \"Рататуй\",\n    email: \"ratatouille@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181f\",\n    name: \"Джоуи Триббиани\",\n    email: \"joeytribbiani@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181r\",\n    name: \"Брэд Питт\",\n    email: \"bradpitt@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n];\nif (!localStorage.getItem(\"users\")) {\n  localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"users\")));\n    }, 2000);\n  });\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    const userIndex = users.findIndex((u) => u._id === id);\n    users[userIndex] = { ...users[userIndex], ...data };\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    resolve(users[userIndex]);\n  });\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"users\")).find(\n          (user) => user._id === id\n        )\n      );\n    }, 1000);\n  });\nexport default {\n  fetchAll,\n  getById,\n  update\n};\n","const qualities = {\n  tedious: {\n    _id: \"67rdca3eeb7f6fgeed471198\",\n    name: \"Нудила\",\n    color: \"primary\"\n  },\n  strange: {\n    _id: \"67rdca3eeb7f6fgeed471100\",\n    name: \"Странный\",\n    color: \"secondary\"\n  },\n  buller: {\n    _id: \"67rdca3eeb7f6fgeed4711012\",\n    name: \"Троль\",\n    color: \"success\"\n  },\n  alcoholic: {\n    _id: \"67rdca3eeb7f6fgeed471101\",\n    name: \"Алкоголик\",\n    color: \"danger\"\n  },\n  handsome: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Красавчик\",\n    color: \"info\"\n  },\n  uncertain: {\n    _id: \"67rdca3eeb7f6fgeed471103\",\n    name: \"Неуверенный\",\n    color: \"dark\"\n  }\n};\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","const comments = [\n  {\n    _id: \"67rdca3eeb7f6fg\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    pageId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor\",\n    created_at: \"1633576399367\"\n  },\n  {\n    _id: \"67rdca3eeb7f6fgdasd\",\n    pageId: \"67rdca3eeb7f6fgeed471815\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor and etc\",\n    created_at: \"1633573058520\"\n  },\n  {\n    _id: \"67rdca3eeb7f6fgdaasd\",\n    pageId: \"67rdca3eeb7f6fgeed471817\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor and etc\",\n    created_at: \"1633573058520\"\n  }\n];\nif (!localStorage.getItem(\"comments\")) {\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(comments);\n    }, 200);\n  });\n\nconst fetchCommentsForUser = (userId) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"comments\")).filter(\n          (c) => c.pageId === userId\n        )\n      );\n    }, 200);\n  });\nconst add = (data) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem(\"comments\"));\n      const newComment = {\n        ...data,\n        created_at: Date.now(),\n        _id: Math.random().toString(36).substr(2, 9)\n      };\n      comments.push(newComment);\n      localStorage.setItem(\"comments\", JSON.stringify(comments));\n      resolve(newComment);\n    }, 200);\n  });\n\nconst remove = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem(\"comments\"));\n      const newComments = comments.filter((x) => x._id !== id);\n      console.log(id);\n      console.log(newComments);\n      localStorage.setItem(\"comments\", JSON.stringify(newComments));\n      resolve(id);\n    }, 200);\n  });\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectForm = ({\n  label,\n  name,\n  value,\n  onChange,\n  defaultOption,\n  options,\n  error\n}) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n          name: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options;\n\n  const getInputClasses = () => {\n    return \"form-select\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const handleChange = ({ target }) => {\n    console.log(\"target selectForm \", target.value);\n\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\n        {label}\n      </label>\n      <select\n        className={getInputClasses()}\n        id=\"validationCustom04\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n      >\n        <option disabled value=\"\">\n          {defaultOption}\n        </option>\n        {optionsArray &&\n          optionsArray.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.name}\n            </option>\n          ))}\n      </select>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nSelectForm.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultOption: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  error: PropTypes.string\n};\n\nexport default SelectForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ label, name, value, onChange, options }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <div>\n        {options.map((option) => (\n          <div\n            className=\"form-check form-check-inline\"\n            key={option.name + \"_\" + option.value}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={name}\n              id={option.name + \"_\" + option.value}\n              value={option.value}\n              checked={option.value === value}\n              onChange={handleChange}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor={option.name + \"_\" + option.value}\n            >\n              {option.name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nRadioField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.array\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n          label: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options;\n\n  const defaultValueArray =\n    defaultValue &&\n    defaultValue.length > 0 &&\n    defaultValue.map((option) => ({\n      label: option.name,\n      value: option._id\n    }));\n\n  const handleChange = (value) => {\n    onChange({ name: name, value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <Select\n        defaultValue={defaultValueArray}\n        isMulti\n        closeMenuOnSelect={false}\n        options={optionsArray}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={handleChange}\n        name={name}\n      />\n    </div>\n  );\n};\nMultiSelectField.propTypes = {\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React, { useState, useEffect } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../API\";\nimport SelectForm from \"../common/form/selectForm\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n    license: false\n  });\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const [professions, setProfessions] = useState();\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n    api.qualities.fetchAll().then((data) => {\n      setQualities(data);\n    });\n  }, []);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    },\n    password: {\n      isRequired: { message: \"Пароль обязателен для заполнения\" },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: { message: \"Пароль должен содержать хотя бы одну цифру\" },\n      min: { message: \"Пароль должен содержать минимум 8 символов\", value: 8 }\n    },\n    profession: {\n      isRequired: { message: \"Обязательно выберите вашу профессию\" }\n    },\n    license: { isRequired: { message: \"Обязательно нужно приять соглашение\" } }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectForm\n        label=\"Выберите вашу профессию: \"\n        name=\"profession\"\n        onChange={handleChange}\n        defaultOption=\"Chose...\"\n        options={professions}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        label=\"Выберите ваш пол: \"\n        name=\"sex\"\n        value={data.sex}\n        options={[\n          { name: \"Male\", value: \"male\" },\n          { name: \"Female\", value: \"female\" }\n        ]}\n        onChange={handleChange}\n      />\n      <MultiSelectField\n        options={qualities}\n        onChange={handleChange}\n        name=\"qualities\"\n        label=\"Выберите ваши качества:\"\n      />\n      <CheckBoxField\n        name=\"license\"\n        value={data.license}\n        onChange={handleChange}\n        error={errors.license}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button disabled={!isValid} className=\"btn btn-primary w-100 mx-auto\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n  const { type } = useParams();\n  const [formType, setFormType] = useState(\n    type === \"register\" ? type : \"login\"\n  );\n\n  const toggleFormType = () => {\n    setFormType((prevState) =>\n      prevState === \"register\" ? \"login\" : \"register\"\n    );\n  };\n\n  return (\n    <div className=\"constainer mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {formType === \"register\" ? (\n            <>\n              <h3 className=\"mb-4\">Register</h3>\n              <RegisterForm />\n              <p>\n                Alredy have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  Sign In\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <h3 className=\"mb-4\">Login</h3>\n              <LoginForm />\n              <p>\n                Dont have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  Sign Up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MeetingsCard = ({ completedMeetings }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Completed meetings</span>\n        </h5>\n\n        <h1 className=\"display-1\">{completedMeetings}</h1>\n      </div>\n    </div>\n  );\n};\nMeetingsCard.propTypes = {\n  completedMeetings: PropTypes.number\n};\n\nexport default MeetingsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\n\nconst UserCard = ({ user }) => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(history.location.pathname + \"/edit\");\n  };\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <button\n          className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n          onClick={handleClick}\n        >\n          <i className=\"bi bi-gear\"></i>\n        </button>\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n          <img\n            src={`https://avatars.dicebear.com/api/avataaars/${(\n              Math.random() + 1\n            )\n              .toString(36)\n              .substring(7)}.svg`}\n            className=\"rounded-circle shadow-1-strong me-3\"\n            alt=\"avatar\"\n            width=\"65\"\n            height=\"65\"\n          />\n          <div className=\"mt-3\">\n            <h4>{user.name}</h4>\n            <p className=\"text-secondary mb-1\">{user.profession.name}</p>\n            <div className=\"text-muted\">\n              <i\n                className=\"bi bi-caret-down-fill text-primary\"\n                role=\"button\"\n              ></i>\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\n              <span className=\"ms-2\">{user.rate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nUserCard.propTypes = {\n  user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Qualities = ({ color, name, _id }) => {\n  return (\n    <span key={_id} className={\"badge m-1 bg-\" + color}>\n      {name}\n    </span>\n  );\n};\nQualities.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired\n};\n\nexport default Qualities;\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport config from \"../config.json\";\r\n\r\naxios.defaults.baseURL = config.apiEndpoint;\r\n\r\naxios.interceptors.response.use(\r\n  (res) => res,\r\n  function (error) {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n      console.log(error);\r\n      toast.error(\"error\");\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst httpService = {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n};\r\n\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\n\r\nconst qualityEndpoint = \"quality/\";\r\n\r\nconst qualityService = {\r\n  get: async (id) => {\r\n    const { data } = await httpService.get(qualityEndpoint + id);\r\n    return data;\r\n  },\r\n  fetchAll: async () => {\r\n    const { data } = await httpService.get(qualityEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default qualityService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport qualityService from \"../services/quality.service\";\r\n\r\nconst QualityContext = React.createContext();\r\n\r\nexport const useQuality = () => {\r\n  return useContext(QualityContext);\r\n};\r\n\r\nexport const QualityProvider = ({ children }) => {\r\n  const [qualities, setQualities] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    getQualitiesList();\r\n  }, []);\r\n\r\n  async function getQualitiesList() {\r\n    try {\r\n      const { content } = await qualityService.fetchAll();\r\n      setQualities(content);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  function getQuality(id) {\r\n    return qualities.find((q) => q._id === id);\r\n  }\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n  }\r\n\r\n  return (\r\n    <QualityContext.Provider value={{ qualities, getQuality, isLoading }}>\r\n      {children}\r\n    </QualityContext.Provider>\r\n  );\r\n};\r\nQualityProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Qualities from \"./qualities\";\nimport { useQuality } from \"../../../hooks/useQuality\";\n\nconst QualitiesList = ({ qualities }) => {\n  const { isLoading, getQuality } = useQuality();\n\n  const userQualities = qualities.map((quality) => getQuality(quality));\n\n  return (\n    <>\n      {!isLoading\n        ? userQualities.map((qualitie) => (\n            <Qualities key={qualitie._id} {...qualitie} />\n          ))\n        : \"Loading..\"}\n    </>\n  );\n};\nQualitiesList.propTypes = {\n  qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Qualities from \"../qualities\";\n\nconst QualitiesCard = ({ qualities }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Qualities</span>\n        </h5>\n        <p className=\"card-text\">\n          <Qualities qualities={qualities} />\n        </p>\n      </div>\n    </div>\n  );\n};\nQualitiesCard.propTypes = {\n  qualities: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({ label, name, value, onChange }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: \"content\", value: target.value });\r\n\r\n    // console.log(target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <label htmlFor={name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        className=\"form-control\"\r\n        id={name}\r\n        name={name}\r\n        rows=\"3\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      ></textarea>\r\n    </>\r\n  );\r\n};\r\nTextAreaField.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectForm from \"../../common/form/selectForm\";\nimport TextAreaField from \"../../common/form/textAreaField\";\nimport api from \"../../../API\";\n\nconst Comment = ({ options, addNewComment, userId }) => {\n  const [newCommentData, setNewCommentData] = useState({\n    userId: \"\",\n    pageId: userId,\n    content: \"\"\n  });\n\n  options = options.map((option) => ({ name: option.name, value: option._id }));\n\n  const handleChange = (target) => {\n    setNewCommentData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const handlePublish = () => {\n    if (newCommentData.userId && newCommentData.content) {\n      api.comments.add(newCommentData);\n\n      addNewComment();\n      setNewCommentData({ userId: \"\", pageId: userId, content: \"\" });\n    }\n  };\n\n  return (\n    <div className=\"card mb-2\">\n      <div className=\"card-body\">\n        <div>\n          <h2>New comment</h2>\n          <div className=\"mb-4\">\n            <SelectForm\n              name=\"userId\"\n              value={newCommentData.userId}\n              onChange={handleChange}\n              defaultOption=\"Выберите пользователя\"\n              options={options}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <TextAreaField\n              label=\"Сообщение\"\n              name=\"exampleFormControlTextarea1\"\n              onChange={handleChange}\n              value={newCommentData.content}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handlePublish}\n          >\n            Опубликовать\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nComment.propTypes = {\n  options: PropTypes.array,\n  addNewComment: PropTypes.func,\n  userId: PropTypes.string\n};\n\nexport default Comment;\n","export const takeDate = (createdAt) => {\r\n  const difference = Date.now() - createdAt;\r\n  const commentDate = new Date(\"\", \"\", \"\", \"\", \"\", \"\", createdAt);\r\n\r\n  if (difference < 1000 * 60 * 5) return \"1 минуту назад\";\r\n  if (difference >= 1000 * 60 * 5 && difference < 1000 * 60 * 10) {\r\n    return \"5 минут назад\";\r\n  }\r\n  if (difference >= 1000 * 60 * 10 && difference < 1000 * 60 * 30) {\r\n    return \"10 минут назад\";\r\n  }\r\n  if (difference >= 1000 * 60 * 30 && difference < 1000 * 60 * 60) {\r\n    return \"30 минут назад\";\r\n  }\r\n  if (difference >= 1000 * 60 * 60 && difference < 1000 * 60 * 60 * 24) {\r\n    return `${commentDate.getHours()}:${\r\n      commentDate.getMinutes() < 10\r\n        ? \"0\" + commentDate.getMinutes()\r\n        : commentDate.getMinutes()\r\n    }`;\r\n  }\r\n  if (\r\n    difference >= 1000 * 60 * 60 * 24 &&\r\n    difference < 1000 * 60 * 60 * 24 * 30\r\n  ) {\r\n    const month = monthName(commentDate.getMonth());\r\n\r\n    return `${commentDate.getDate()} ${month}`;\r\n  }\r\n  if (difference >= 1000 * 60 * 60 * 24 * 30) {\r\n    const month = monthName(commentDate.getMonth());\r\n\r\n    return `${commentDate.getDate()} ${month} ${commentDate.getFullYear()}`;\r\n  }\r\n\r\n  return createdAt;\r\n};\r\n\r\nconst monthName = (month) => {\r\n  if (month === 0) {\r\n    return \"Января\";\r\n  }\r\n  if (month === 1) {\r\n    return \"Февраля\";\r\n  }\r\n  if (month === 2) {\r\n    return \"Марта\";\r\n  }\r\n  if (month === 3) {\r\n    return \"Апреля\";\r\n  }\r\n  if (month === 4) {\r\n    return \"Мая\";\r\n  }\r\n  if (month === 5) {\r\n    return \"Июня\";\r\n  }\r\n  if (month === 6) {\r\n    return \"Июля\";\r\n  }\r\n  if (month === 7) {\r\n    return \"Августа\";\r\n  }\r\n  if (month === 8) {\r\n    return \"Сентября\";\r\n  }\r\n  if (month === 9) {\r\n    return \"Октября\";\r\n  }\r\n  if (month === 10) {\r\n    return \"Новября\";\r\n  }\r\n  if (month === 11) {\r\n    return \"Декабря\";\r\n  }\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { takeDate } from \"../../../utils/commentDate\";\nimport _ from \"lodash\";\n\nconst CommentsList = ({ users, comments, removeComment }) => {\n  const takeNameByUserId = (userId) => {\n    return users.filter((user) => user._id === userId)[0].name;\n  };\n\n  const sortedComments = _.orderBy(comments, [\"created_at\"], [\"desc\"]);\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h2>Comments</h2>\n        <hr />\n        {sortedComments.map((comment) => (\n          <div className=\"bg-light card-body mb-3\" key={comment._id}>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex flex-start\">\n                  <img\n                    src={`https://avatars.dicebear.com/api/avataaars/${(\n                      Math.random() + 1\n                    )\n                      .toString(36)\n                      .substring(7)}.svg`}\n                    className=\"rounded-circle shadow-1-strong me-3\"\n                    alt=\"avatar\"\n                    width=\"65\"\n                    height=\"65\"\n                  />\n                  <div className=\"flex-grow-1 flex-shrink-1\">\n                    <div className=\"mb-4\">\n                      <div className=\"d-flex justify-content-between align-items-center\">\n                        <p className=\"mb-1\">\n                          {takeNameByUserId(comment.userId)}\n                          <span className=\"small\">\n                            {\" - \"}\n                            {takeDate(comment.created_at)}\n                          </span>\n                        </p>\n                        <button\n                          className=\"btn btn-sm text-primary d-flex align-items-center\"\n                          onClick={() => removeComment(comment._id)}\n                        >\n                          <i className=\"bi bi-x-lg\"></i>\n                        </button>\n                      </div>\n                      <p className=\"small mb-0\">{comment.content}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nCommentsList.propTypes = {\n  userId: PropTypes.string,\n  comments: PropTypes.array,\n  users: PropTypes.array,\n  removeComment: PropTypes.func\n};\n\nexport default CommentsList;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Comment from \"./comment\";\nimport CommentsList from \"./commentsList\";\nimport api from \"../../../API\";\n\nconst Comments = ({ userId, users }) => {\n  const [commentsForUser, setCommentsForUser] = useState();\n\n  useEffect(() => {\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setCommentsForUser(data);\n    });\n  }, []);\n\n  const removeComment = (commentId) => {\n    api.comments.remove(commentId);\n\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setCommentsForUser(data);\n    });\n  };\n\n  const addNewComment = () => {\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setCommentsForUser(data);\n    });\n  };\n\n  return (\n    <>\n      <Comment options={users} userId={userId} addNewComment={addNewComment} />\n\n      {commentsForUser ? (\n        <CommentsList\n          users={users}\n          comments={commentsForUser}\n          removeComment={removeComment}\n        />\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </>\n  );\n};\nComments.propTypes = {\n  userId: PropTypes.string,\n  users: PropTypes.array\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../../API\";\nimport PropTypes from \"prop-types\";\nimport MeetingsCard from \"../../ui/cards/meetingsCard\";\nimport UserCard from \"../../ui/cards/userCard\";\nimport QualitiesCard from \"../../ui/cards/qualitiesCard\";\nimport Comments from \"../../ui/cards/comments\";\n\nconst UserPage = ({ userId }) => {\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState();\n\n  useEffect(() => {\n    api.users.getById(userId).then((data) => {\n      setUser(data);\n    });\n    api.users.fetchAll().then((data) => {\n      setUsers(data);\n    });\n  }, []);\n\n  if (user && users) {\n    return (\n      <div className=\"container\">\n        <div className=\"row gutters-sm\">\n          <div className=\"col-md-4 mb-3\">\n            <UserCard user={user} />\n            <QualitiesCard qualities={user.qualities} />\n            <MeetingsCard completedMeetings={user.completedMeetings} />\n          </div>\n\n          <div className=\"col-md-8\">\n            <Comments userId={userId} users={users} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"Loading...\";\n};\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pageCount = Math.ceil(itemsCount / pageSize);\n\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n        {pages.map((page) => {\n          return (\n            <li\n              key={page}\n              className={\n                \"page-item \" + (page === currentPage ? \"active\" : \"null\")\n              }\n            >\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (Array.isArray(items)) {\n    return (\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            key={item[valueProperty]}\n            className={\n              \"list-group-item\" + (item === selectedItem ? \" active\" : \"\")\n            }\n            onClick={() => onItemSelect(item)}\n            role=\"button\"\n          >\n            {item[contentProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <ul className=\"list-group\">\n      {Object.keys(items).map((item) => (\n        <li\n          key={items[item][valueProperty]}\n          className={\n            \"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\")\n          }\n          onClick={() => onItemSelect(items[item])}\n          role=\"button\"\n        >\n          {items[item][contentProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchStatus = ({ length }) => {\n  const renderPhrase = () => {\n    if (length > 1 && length < 5) return \"человека тусанут\";\n    return \"человек тусанет\";\n  };\n\n  return (\n    <h1>\n      <span className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\n        {length > 0\n          ? `${length} ${renderPhrase()} с тобой сегодня`\n          : \"Никто с тобой не тусанет\"}\n      </span>\n    </h1>\n  );\n};\nSearchStatus.propTypes = {\n  length: PropTypes.number.isRequired\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BookMark = ({ status, ...rest }) => {\n  return (\n    <button {...rest}>\n      <i className={\"bi bi-bookmark\" + (status ? \"-fill\" : \"\")}></i>\n    </button>\n  );\n};\n\nBookMark.propTypes = {\n  rest: PropTypes.array,\n  status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n  const handleSort = (item) => {\n    if (selectedSort.path === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({ path: item, order: \"asc\" });\n    }\n  };\n  const renderSortArrow = (currentPath) => {\n    if (selectedSort.path === currentPath) {\n      if (selectedSort.order === \"asc\") {\n        return <i className=\"bi bi-caret-up-fill\"></i>;\n      } else {\n        return <i className=\"bi bi-caret-down-fill\"></i>;\n      }\n    } else {\n      return null;\n    }\n  };\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            key={column}\n            onClick={\n              columns[column].path\n                ? () => handleSort(columns[column].path)\n                : undefined\n            }\n            {...{ role: columns[column].path && \"button\" }}\n            scope=\"col\"\n          >\n            {columns[column].name}\n            {renderSortArrow(columns[column].path)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component;\n      if (typeof component === \"function\") {\n        return component(item);\n      }\n      return component;\n    }\n    return _.get(item, columns[column].path);\n  };\n\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map((column) => (\n            <td key={column}>{renderContent(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader {...{ onSort, selectedSort, columns }} />\n\n          <TableBody {...{ data, columns }} />\n        </>\n      )}\n    </table>\n  );\n};\n\nTable.propTypes = {\n  onSort: PropTypes.func,\n  selectedSort: PropTypes.object,\n  columns: PropTypes.object,\n  data: PropTypes.array,\n  children: PropTypes.array\n};\nexport default Table;\n","import httpService from \"./http.service\";\r\n\r\nconst professionEndpoint = \"profession/\";\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default professionService;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport professionService from \"../services/profession.service\";\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfession = () => {\r\n  return useContext(ProfessionContext);\r\n};\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n  const [professions, setProfessions] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    getProfessionsList();\r\n  }, []);\r\n\r\n  async function getProfessionsList() {\r\n    try {\r\n      const { content } = await professionService.get();\r\n      setProfessions(content);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n\r\n  function getProfession(id) {\r\n    return professions.find((p) => p._id === id);\r\n  }\r\n\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n  }\r\n\r\n  return (\r\n    <ProfessionContext.Provider\r\n      value={{ professions, isLoading, getProfession }}\r\n    >\r\n      {children}\r\n    </ProfessionContext.Provider>\r\n  );\r\n};\r\nProfessionProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProfession } from \"../../hooks/useProfession\";\r\n\r\nconst Profession = ({ id }) => {\r\n  const { isLoading, getProfession } = useProfession();\r\n  const prof = getProfession(id);\r\n\r\n  if (!isLoading) {\r\n    return <p>{prof.name}</p>;\r\n  } else {\r\n    return \"loading..\";\r\n  }\r\n};\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n};\r\n\r\nexport default Profession;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UsersTable = ({\n  users,\n  onSort,\n  selectedSort,\n  onToggleBookMark,\n  onDelete\n}) => {\n  const columns = {\n    name: {\n      path: \"name\",\n      name: \"Имя\",\n      component: (user) => <Link to={`/users/${user._id}`}>{user.name}</Link>\n    },\n    qualities: {\n      name: \"Качества\",\n      component: (user) => <Qualities qualities={user.qualities} />\n    },\n    professions: {\n      name: \"Профессия\",\n      component: (user) => <Profession id={user.profession} />\n    },\n    completedMeetings: {\n      path: \"completedMeetings\",\n      name: \"Встретился, раз\"\n    },\n    rate: { path: \"rate\", name: \"Рейтинг\" },\n    bookmark: {\n      path: \"bookmark\",\n      name: \"Избранное\",\n      component: (user) => (\n        <BookMark\n          status={user.bookmark}\n          onClick={() => onToggleBookMark(user._id)}\n        />\n      )\n    },\n    delete: {\n      component: (user) => (\n        <button\n          onClick={() => {\n            onDelete(user._id);\n          }}\n          className=\"btn btn-danger btn-sm\"\n        >\n          delete\n        </button>\n      )\n    }\n  };\n  return (\n    <Table\n      onSort={onSort}\n      selectedSort={selectedSort}\n      columns={columns}\n      data={users}\n    />\n  );\n};\n\nUsersTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  onToggleBookMark: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nexport default UsersTable;\n","import httpService from \"./http.service\";\r\n\r\nconst userEndpoint = \"user/\";\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndpoint);\r\n    return data;\r\n  }\r\n};\r\n\r\nexport default userService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport userService from \"../services/user.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUsers = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (error !== null) {\r\n      toast.error(error);\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  async function getUsers() {\r\n    try {\r\n      const { content } = await userService.get();\r\n      setUsers(content);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      errorCatcher(error);\r\n    }\r\n  }\r\n  function errorCatcher(error) {\r\n    const { message } = error.response.data;\r\n    setError(message);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={{ users }}>\r\n      {!isLoading ? children : \"loading...\"}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\nUserProvider.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default UserProvider;\r\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport _ from \"lodash\";\nimport { useLocation } from \"react-router\";\nimport query from \"query-string\";\nimport Pagination from \"../../common/pagination\";\nimport { paginate } from \"../../../utils/paginate\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UsersTable from \"../../ui/usersTable\";\nimport { useUsers } from \"../../../hooks/useUsers\";\n\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfessions] = useState();\n  const [selectedProf, setSelectedProf] = useState();\n  const [searchData, setSearchData] = useState(\"\");\n\n  const location = useLocation();\n\n  const search = query.parse(location.search);\n\n  if (!location.search) {\n    search.sortBy = \"name\";\n    search.order = \"asc\";\n  }\n\n  const [sortBy, setSortBy] = useState({\n    path: search.sortBy,\n    order: search.order\n  });\n  const pageSize = 8;\n\n  // const [users, setUsers] = useState();\n\n  const { users } = useUsers();\n  console.log(users);\n\n  const handleDelete = (userId) => {\n    // setUsers(\n    //   users.filter((user) => {\n    //     return user._id !== userId;\n    //   })\n    // );\n    console.log(userId);\n  };\n\n  const handleToggleBookMark = (userId) => {\n    const newArray = users.map((user) => {\n      if (user._id === userId) {\n        user.bookmark = !user.bookmark;\n      }\n      return user;\n    });\n\n    // setUsers(newArray);\n    console.log(newArray);\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchData]);\n\n  const handleProfessionSelect = (item) => {\n    setSearchData(\"\");\n    setSelectedProf(item);\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n\n  const handleChangeSearch = (e) => {\n    setSelectedProf(undefined);\n    setSearchData(e.target.value);\n  };\n  if (users) {\n    const filteredUsers = searchData\n      ? users.filter((user) => user.name.toLowerCase().includes(searchData))\n      : selectedProf\n      ? users.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf)\n        )\n      : users;\n\n    const count = Array.isArray(filteredUsers) && filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return (\n      <div className=\"d-flex\">\n        {professions && (\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n            <GroupList\n              selectedItem={selectedProf}\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n            />\n            <button onClick={clearFilter} className=\"btn btn-secondary mt-2\">\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className=\"d-flex flex-column\">\n          <SearchStatus length={count} />\n          <input\n            type=\"text\"\n            className=\"w-100 mx-auto\"\n            name=\"searchData\"\n            value={searchData}\n            onChange={handleChangeSearch}\n            placeholder=\"Search...\"\n          ></input>\n\n          {count > 0 && (\n            <UsersTable\n              users={usersCrop}\n              onSort={handleSort}\n              selectedSort={sortBy}\n              onDelete={handleDelete}\n              onToggleBookMark={handleToggleBookMark}\n            />\n          )}\n          <div className=\"d-flex justify-content-center\">\n            <Pagination\n              itemsCount={count}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"Loading...\";\n};\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport { validator } from \"../../../utils/validator\";\n\nimport TextField from \"../../common/form/textField\";\nimport SelectForm from \"../../common/form/selectForm\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\n\nconst EditUserPage = () => {\n  const { userId } = useParams();\n  const history = useHistory();\n\n  const [data, setData] = useState();\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const [professions, setProfessions] = useState();\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n    api.qualities.fetchAll().then((data) => {\n      setQualities(data);\n    });\n\n    api.users.getById(userId).then((data) => {\n      setData({\n        ...data,\n        sex: data.sex ? data.sex : \"male\",\n        email: data.email ? data.email : \"\"\n      });\n    });\n  }, []);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    name: { isRequired: { message: \"Имя обязательнао для заполнения\" } },\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const editUserData = () => {\n    const professionsArray =\n      !Array.isArray(professions) && typeof professions === \"object\"\n        ? Object.keys(professions).map((profession) => ({\n            name: professions[profession].name,\n            _id: professions[profession]._id\n          }))\n        : professions;\n\n    const qualitiesArray =\n      !Array.isArray(qualities) && typeof qualities === \"object\"\n        ? Object.keys(qualities).map((qualitie) => ({\n            name: qualities[qualitie].name,\n            _id: qualities[qualitie]._id,\n            color: qualities[qualitie].color\n          }))\n        : qualities;\n\n    let userData = {};\n\n    const userQualities =\n      Object.keys(data.qualities[0]).length > 2\n        ? data.qualities\n        : data.qualities.map((userQualitie) => {\n            return qualitiesArray.filter(\n              (qualitie) => qualitie._id === userQualitie.value\n            )[0];\n          });\n\n    userData = {\n      ...data,\n      profession:\n        typeof data.profession === \"object\"\n          ? data.profession\n          : professionsArray.filter((prof) => prof._id === data.profession)[0],\n      qualities: userQualities\n    };\n\n    return userData;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n\n    const edituserdata = editUserData();\n\n    api.users.update(userId, edituserdata);\n\n    history.replace(`/users/${userId}`);\n  };\n\n  const handleGoBack = () => {\n    history.push(`/users/${userId}`);\n  };\n\n  if (data) {\n    return (\n      <div className=\"constainer mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 shadow p-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mb-4\"\n              onClick={handleGoBack}\n            >\n              <i className=\"bi bi-arrow-left m-1\" />\n              Назад\n            </button>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label=\"Электронная почта\"\n                type=\"text\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectForm\n                label=\"Выберите вашу профессию: \"\n                name=\"profession\"\n                onChange={handleChange}\n                defaultOption=\"Chose...\"\n                options={professions}\n                value={data.profession._id}\n                error={errors.profession}\n              />\n              <RadioField\n                label=\"Выберите ваш пол: \"\n                name=\"sex\"\n                value={data.sex}\n                options={[\n                  { name: \"Male\", value: \"male\" },\n                  { name: \"Female\", value: \"female\" }\n                ]}\n                onChange={handleChange}\n              />\n              <MultiSelectField\n                options={qualities}\n                defaultValue={data.qualities}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качества:\"\n              />\n              <button\n                onClick={handleSubmit}\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n              >\n                Обновить\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"Loading...\";\n};\nEditUserPage.propTypes = {\n  userId: PropTypes.string\n};\nexport default EditUserPage;\n","import React from \"react\";\nimport UserPage from \"../components/page/userPage/\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport { useParams } from \"react-router\";\nimport UserProvider from \"../hooks/useUsers\";\nimport { QualityProvider } from \"../hooks/useQuality\";\n\nconst Users = () => {\n  const params = useParams();\n  const { userId, edit } = params;\n\n  return (\n    <>\n      <UserProvider>\n        {userId ? (\n          edit ? (\n            <EditUserPage />\n          ) : (\n            <UserPage userId={userId} />\n          )\n        ) : (\n          <QualityProvider>\n            <UsersListPage />\n          </QualityProvider>\n        )}\n      </UserProvider>\n    </>\n  );\n\n  // if (userId) {\n  //   return edit ? (\n  //     <EditUserPage userId={userId} />\n  //   ) : (\n  //     <div className=\"container\">\n  //       <div className=\"row gutters-sm\">\n  //         <UserPage userId={userId} />\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  // return <UsersListPage />;\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"../app/components/ui/navBar\";\nimport Main from \"../app/layouts/main\";\nimport Login from \"../app/layouts/login\";\nimport Users from \"../app/layouts/users\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar />\n      <ProfessionProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/login/:type?\" component={Login} />\n          <Route path=\"/users/:userId?/:edit?\" component={Users} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </ProfessionProvider>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import Users from \"./components/users\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}