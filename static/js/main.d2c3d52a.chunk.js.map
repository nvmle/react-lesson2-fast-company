{"version":3,"sources":["components/ui/navBar.jsx","layouts/main.jsx","utils/validator.js","components/common/form/textField.jsx","components/common/form/checkBoxField.jsx","components/ui/loginForm.jsx","API/fake.api/professions.api.js","API/fake.api/user.api.js","API/fake.api/qualities.api.js","API/fake.api/comments.api.js","API/index.js","components/common/form/selectForm.jsx","components/common/form/radioField.jsx","components/common/form/multiSelectField.jsx","components/ui/registerForm.jsx","layouts/login.jsx","components/ui/cards/meetingsCard.jsx","components/ui/cards/userCard.jsx","components/ui/qualities/qualities.jsx","components/ui/qualities/index.js","components/ui/qualities/qualitiesList.jsx","components/ui/cards/qualitiesCard.jsx","components/ui/cards/comment.jsx","components/ui/cards/commentsList.jsx","components/page/userPage/index.js","components/page/userPage/userPage.jsx","components/common/pagination.jsx","components/common/groupList.jsx","components/ui/searchStatus.jsx","components/common/bookmark.jsx","components/common/table/tableHeader.jsx","components/common/table/tableBody.jsx","components/common/table/index.js","components/common/table/table.jsx","components/ui/usersTable.jsx","components/page/usersListPage/index.js","components/page/usersListPage/usersListPage.jsx","utils/paginate.js","components/page/editUserPage/index.js","components/page/editUserPage/editUserPage.jsx","layouts/users.jsx","app/App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","Main","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","htmlFor","id","target","onClick","prevState","defaultProps","CheckBoxField","children","checked","LoginForm","email","password","stayOn","setData","setErrors","useEffect","validateConfig","Object","keys","isValid","isRequired","isEmail","isCapitalSymbol","isContainDigit","min","handleChange","onSubmit","e","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectForm","defaultOption","options","optionsArray","Array","isArray","map","optionName","option","RadioField","MultiSelectField","defaultValue","defaultValueArray","isMulti","closeMenuOnSelect","classNamePrefix","RegisterForm","license","setQualities","setProfessions","api","then","Login","useParams","formType","setFormType","toggleFormType","role","MeetingsCard","UserCard","onEditUser","src","substring","alt","width","height","Qualities","qualitie","QualitiesCard","Comment","addNewComment","rows","CommentsList","removeComment","comment","UserPage","history","useHistory","setUser","setUsers","commentsForUser","setCommentsForUser","newCommentData","setNewCommentData","commentId","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","aria-label","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","BookMark","status","rest","TableHeader","onSort","selectedSort","columns","column","path","order","undefined","scope","currentPath","TableBody","renderContent","component","get","Table","UsersTable","onToggleBookMark","onDelete","delete","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","searchData","setSearchData","location","useLocation","search","query","sortBy","setSortBy","filteredUsers","toLowerCase","includes","count","usersCrop","pageNumber","startIndex","slice","take","paginate","orderBy","placeholder","pageIndex","EditUserPage","handleSubmit","edituserdata","professionsArray","qualitiesArray","userQualities","userQualitie","prof","editUserData","newData","replace","Users","params","edit","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAyBeA,EAtBA,WACb,OACE,qBAAIC,UAAU,gBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,IAA9B,oBAIF,oBAAID,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,SAA9B,qBAIF,oBAAID,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,SAA9B,yBCXOC,EAJF,WACX,OAAO,uC,sBCHF,SAASC,EAAUC,EAAMC,GAC9B,IAAMC,EAAS,GACf,SAASC,EAASC,EAAgBJ,EAAMC,GACtC,IAAII,EACJ,OAAQD,GACN,IAAK,aAEDC,EADkB,mBAATL,GACSA,EAEe,KAAhBA,EAAKM,OAExB,MAEF,IAAK,UAEHD,GADoB,kBACUE,KAAKP,GACnC,MAEF,IAAK,kBAEHK,GADsB,UACUE,KAAKP,GACrC,MAEF,IAAK,iBAEHK,GADoB,OACUE,KAAKP,GACnC,MAEF,IAAK,MACHK,EAAiBL,EAAKQ,OAASP,EAAOQ,MAO1C,GAAIJ,EAAgB,OAAOJ,EAAOS,QAGpC,IAAK,IAAMC,KAAaX,EACtB,IAAK,IAAMI,KAAkBH,EAAOU,GAAY,CAC9C,IAAMC,EAAQT,EACZC,EACAJ,EAAKW,GACLV,EAAOU,GAAWP,IAEhBQ,IAAUV,EAAOS,KACnBT,EAAOS,GAAaC,GAI1B,OAAOV,EChDT,IAAMW,EAAY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAAY,EAC3BM,oBAAS,GADkB,mBAC5DC,EAD4D,KAC9CC,EAD8C,KAenE,OACE,sBAAKxB,UAAU,OAAf,UACE,uBAAOyB,QAASL,EAAhB,SAAuBF,IACvB,sBAAKlB,UAAU,6BAAf,UACE,uBACEmB,KAAMI,EAAe,OAASJ,EAC9BN,MAAOA,EACPO,KAAMA,EACNM,GAAIN,EACJC,SAba,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACtBN,EAAS,CAAED,KAAMO,EAAOP,KAAMP,MAAOc,EAAOd,SAatCb,UAjBC,gBAAkBgB,EAAQ,cAAgB,MAmBnC,aAATG,GACC,wBACEnB,UAAU,4BACVmB,KAAK,SACLS,QA5BiB,WACzBJ,GAAgB,SAACK,GAAD,OAAgBA,MAwB1B,SAKE,mBAAG7B,UAAW,aAAeuB,EAAe,SAAW,QAG1DP,GAAS,qBAAKhB,UAAU,mBAAf,SAAmCgB,WAKrDC,EAAUa,aAAe,CACvBX,KAAM,QAWOF,QChBAc,EArCO,SAAC,GAAgD,IAA9CX,EAA6C,EAA7CA,KAAMP,EAAuC,EAAvCA,MAAOQ,EAAgC,EAAhCA,SAAUW,EAAsB,EAAtBA,SAAUhB,EAAY,EAAZA,MASxD,OACE,sBAAKhB,UAAU,kBAAf,UACE,uBACEA,UANG,oBAAsBgB,EAAQ,cAAgB,IAOjDG,KAAK,WACLN,MAAM,GACNa,GAAIN,EACJC,SAfe,WACnBA,EAAS,CAAED,KAAMA,EAAMP,OAAQA,KAe3BoB,QAASpB,IAEX,uBAAOb,UAAU,mBAAmByB,QAASL,EAA7C,SACGY,IAEFhB,GAAS,qBAAKhB,UAAU,mBAAf,SAAmCgB,QCgDpCkB,EApEG,WAAO,IAAD,EACEZ,mBAAS,CAAEa,MAAO,GAAIC,SAAU,GAAIC,QAAQ,IAD9C,mBACfjC,EADe,KACTkC,EADS,OAEMhB,mBAAS,IAFf,mBAEfhB,EAFe,KAEPiC,EAFO,KAGtBC,qBAAU,WACRjC,MACC,CAACH,IAEJ,IAAMG,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMqC,GAE/B,OADAF,EAAUjC,GAC4B,IAA/BoC,OAAOC,KAAKrC,GAAQM,QAGvBgC,EAAyC,IAA/BF,OAAOC,KAAKrC,GAAQM,OAE9B6B,EAAiB,CACrBN,MAAO,CACLU,WAAY,CAAE/B,QAAS,wPACvBgC,QAAS,CAAEhC,QAAS,qNAEtBsB,SAAU,CACRS,WAAY,CAAE/B,QAAS,qLACvBiC,gBAAiB,CACfjC,QAAS,yRAEXkC,eAAgB,CAAElC,QAAS,kOAC3BmC,IAAK,CAAEnC,QAAS,iOAA8CD,MAAO,KAInEqC,EAAe,SAACvB,GACpBW,GAAQ,SAACT,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOP,KAAOO,EAAOd,YAUhE,OACE,uBAAMsC,SARa,SAACC,GACpBA,EAAEC,iBACc9C,KAEhB+C,QAAQC,IAAInD,IAIZ,UACE,cAAC,EAAD,CACEc,MAAM,QACNE,KAAK,QACLP,MAAOT,EAAK+B,MACZd,SAAU6B,EACVlC,MAAOV,EAAO6B,QAEhB,cAAC,EAAD,CACEjB,MAAM,WACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAKgC,SACZf,SAAU6B,EACVlC,MAAOV,EAAO8B,WAEhB,cAAC,EAAD,CAAehB,KAAK,SAASP,MAAOT,EAAKiC,OAAQhB,SAAU6B,EAA3D,4HAGA,wBAAQM,UAAWZ,EAAS5C,UAAU,gCAAtC,wBClEOyD,EAAoB,CAC/BC,OAAQ,CAAEC,IAAK,2BAA4BvC,KAAM,wCACjDwC,OAAQ,CAAED,IAAK,2BAA4BvC,KAAM,oDACjDyC,QAAS,CAAEF,IAAK,2BAA4BvC,KAAM,kCAClD0C,SAAU,CAAEH,IAAK,2BAA4BvC,KAAM,8CACnD2C,MAAO,CAAEJ,IAAK,2BAA4BvC,KAAM,kCAChD4C,KAAM,CAAEL,IAAK,2BAA4BvC,KAAM,mCAiBlC,GACb6C,SARe,kBACf,IAAIC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EAAQV,KACP,UCnBDa,EAAY,CAChBC,QAAS,CACPZ,IAAK,2BACLvC,KAAM,uCACNoD,MAAO,WAETC,QAAS,CACPd,IAAK,2BACLvC,KAAM,mDACNoD,MAAO,aAETE,OAAQ,CACNf,IAAK,4BACLvC,KAAM,iCACNoD,MAAO,WAETG,UAAW,CACThB,IAAK,2BACLvC,KAAM,yDACNoD,MAAO,UAETI,SAAU,CACRjB,IAAK,2BACLvC,KAAM,yDACNoD,MAAO,QAETK,UAAW,CACTlB,IAAK,2BACLvC,KAAM,qEACNoD,MAAO,SAILM,EAAQ,CACZ,CACEnB,IAAK,2BACLvC,KAAM,gEACNe,MAAO,4BACP4C,IAAK,OACLC,WAAYC,EAAYvB,OACxBY,UAAW,CAACA,EAAUC,QAASD,EAAUO,UAAWP,EAAUG,SAC9DS,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,2BACNe,MAAO,sBACP4C,IAAK,OACLC,WAAYC,EAAYvB,OACxBY,UAAW,CAACA,EAAUI,OAAQJ,EAAUM,SAAUN,EAAUK,WAC5DO,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,oDACNe,MAAO,0BACP4C,IAAK,OACLC,WAAYC,EAAYvB,OACxBY,UAAW,CAACA,EAAUI,QACtBQ,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,gEACNe,MAAO,8BACP4C,IAAK,SACLC,WAAYC,EAAYrB,OACxBU,UAAW,CAACA,EAAUO,WACtBK,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,sEACNe,MAAO,+BACP4C,IAAK,OACLC,WAAYC,EAAYpB,QACxBS,UAAW,CAACA,EAAUG,QAASH,EAAUC,SACzCW,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,0GACNe,MAAO,mCACP4C,IAAK,OACLC,WAAYC,EAAYpB,QACxBS,UAAW,CAACA,EAAUG,QAASH,EAAUO,WACzCK,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,kFACNe,MAAO,gCACP4C,IAAK,OACLC,WAAYC,EAAYnB,SACxBQ,UAAW,CAACA,EAAUG,QAASH,EAAUC,SACzCW,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,sEACNe,MAAO,6BACP4C,IAAK,OACLC,WAAYC,EAAYnB,SACxBQ,UAAW,CAACA,EAAUM,UACtBM,kBAAmB,GACnBC,KAAM,EACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,4EACNe,MAAO,8BACP4C,IAAK,SACLC,WAAYC,EAAYjB,KACxBM,UAAW,CAACA,EAAUG,QAASH,EAAUO,WACzCK,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,6CACNe,MAAO,6BACP4C,IAAK,OACLC,WAAYC,EAAYjB,KACxBM,UAAW,CAACA,EAAUM,SAAUN,EAAUI,QAC1CQ,kBAAmB,GACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,wFACNe,MAAO,+BACP4C,IAAK,OACLC,WAAYC,EAAYlB,MACxBO,UAAW,CAACA,EAAUO,UAAWP,EAAUG,SAC3CS,kBAAmB,IACnBC,KAAM,IACNC,UAAU,GAEZ,CACEzB,IAAK,2BACLvC,KAAM,oDACNe,MAAO,0BACP4C,IAAK,OACLC,WAAYC,EAAYlB,MACxBO,UAAW,CAACA,EAAUM,UACtBM,kBAAmB,IACnBC,KAAM,EACNC,UAAU,IAGTC,aAAaC,QAAQ,UACxBD,aAAaE,QAAQ,QAASC,KAAKC,UAAUX,IAG/C,IAyBe,GACbb,SA1Be,kBACf,IAAIC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EAAQqB,KAAKE,MAAML,aAAaC,QAAQ,aACvC,SAuBLK,QAZc,SAACjE,GAAD,OACd,IAAIwC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EACEqB,KAAKE,MAAML,aAAaC,QAAQ,UAAUM,MACxC,SAACC,GAAD,OAAUA,EAAKlC,MAAQjC,QAG1B,SAKLoE,OAtBa,SAACpE,EAAItB,GAAL,OACb,IAAI8D,SAAQ,SAACC,GACX,IAAMW,EAAQU,KAAKE,MAAML,aAAaC,QAAQ,UACxCS,EAAYjB,EAAMkB,WAAU,SAACC,GAAD,OAAOA,EAAEtC,MAAQjC,KACnDoD,EAAMiB,GAAN,2BAAwBjB,EAAMiB,IAAe3F,GAC7CiF,aAAaE,QAAQ,QAASC,KAAKC,UAAUX,IAC7CX,EAAQW,EAAMiB,SCxLZzB,EAAY,CAChBC,QAAS,CACPZ,IAAK,2BACLvC,KAAM,uCACNoD,MAAO,WAETC,QAAS,CACPd,IAAK,2BACLvC,KAAM,mDACNoD,MAAO,aAETE,OAAQ,CACNf,IAAK,4BACLvC,KAAM,iCACNoD,MAAO,WAETG,UAAW,CACThB,IAAK,2BACLvC,KAAM,yDACNoD,MAAO,UAETI,SAAU,CACRjB,IAAK,2BACLvC,KAAM,yDACNoD,MAAO,QAETK,UAAW,CACTlB,IAAK,2BACLvC,KAAM,qEACNoD,MAAO,SAUI,GACbP,SARe,kBACf,IAAIC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EAAQG,KACP,UCpCD4B,EAAW,CACf,CACEvC,IAAK,kBACLwC,OAAQ,2BACRC,OAAQ,2BACRC,QAAS,oBACTC,WAAY,iBAEd,CACE3C,IAAK,sBACLyC,OAAQ,2BACRD,OAAQ,2BACRE,QAAS,4BACTC,WAAY,iBAEd,CACE3C,IAAK,uBACLyC,OAAQ,2BACRD,OAAQ,2BACRE,QAAS,4BACTC,WAAY,kBAGXjB,aAAaC,QAAQ,aACxBD,aAAaE,QAAQ,WAAYC,KAAKC,UAAUS,IAElD,IChBeK,EANH,CACVzB,QACAG,cACAX,YACA4B,SD6Da,CACbjC,SA5Ce,kBACf,IAAIC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EAAQ+B,KACP,SAyCLM,qBAtC2B,SAACL,GAAD,OAC3B,IAAIjC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChBF,EACEqB,KAAKE,MAAML,aAAaC,QAAQ,aAAamB,QAC3C,SAACC,GAAD,OAAOA,EAAEN,SAAWD,QAGvB,SA+BLQ,IA7BU,SAACvG,GAAD,OACV,IAAI8D,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChB,IAAM6B,EAAWV,KAAKE,MAAML,aAAaC,QAAQ,aAC3CsB,EAAU,2BACXxG,GADW,IAEdkG,WAAYO,KAAKC,MACjBnD,IAAKoD,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KAE5ChB,EAASiB,KAAKP,GACdvB,aAAaE,QAAQ,WAAYC,KAAKC,UAAUS,IAChD/B,EAAQyC,KACP,SAkBLQ,OAfa,SAAC1F,GAAD,OACb,IAAIwC,SAAQ,SAACC,GACXC,OAAOC,YAAW,WAChB,IACMgD,EADW7B,KAAKE,MAAML,aAAaC,QAAQ,aACpBmB,QAAO,SAACa,GAAD,OAAOA,EAAE3D,MAAQjC,KACrD4B,QAAQC,IAAI7B,GACZ4B,QAAQC,IAAI8D,GACZhC,aAAaE,QAAQ,WAAYC,KAAKC,UAAU4B,IAChDlD,EAAQzC,KACP,WEDQ6F,EA/DI,SAAC,GAQb,IAPLrG,EAOI,EAPJA,MACAE,EAMI,EANJA,KACAP,EAKI,EALJA,MACAQ,EAII,EAJJA,SACAmG,EAGI,EAHJA,cACAC,EAEI,EAFJA,QACAzG,EACI,EADJA,MAEM0G,EACHC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK9BA,EAJA/E,OAAOC,KAAK8E,GAASI,KAAI,SAACC,GAAD,MAAiB,CACxC1G,KAAMqG,EAAQK,GAAY1G,KAC1BP,MAAO4G,EAAQK,GAAYnE,QAcnC,OACE,sBAAK3D,UAAU,OAAf,UACE,uBAAOyB,QAAQ,qBAAqBzB,UAAU,aAA9C,SACGkB,IAEH,yBACElB,UAfG,eAAiBgB,EAAQ,cAAgB,IAgB5CU,GAAG,qBACHN,KAAMA,EACNP,MAAOA,EACPQ,SAhBe,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACtB2B,QAAQC,IAAI,qBAAsB5B,EAAOd,OAEzCQ,EAAS,CAAED,KAAMO,EAAOP,KAAMP,MAAOc,EAAOd,SAQ1C,UAOE,wBAAQ2C,UAAQ,EAAC3C,MAAM,GAAvB,SACG2G,IAEFE,GACCA,EAAaG,KAAI,SAACE,GAAD,OACf,wBAAQlH,MAAOkH,EAAOlH,MAAtB,SACGkH,EAAO3G,MADwB2G,EAAOlH,aAK9CG,GAAS,qBAAKhB,UAAU,mBAAf,SAAmCgB,QCNpCgH,EA3CI,SAAC,GAA+C,IAA7C9G,EAA4C,EAA5CA,MAAOE,EAAqC,EAArCA,KAAMP,EAA+B,EAA/BA,MAAOQ,EAAwB,EAAxBA,SAAUoG,EAAc,EAAdA,QAC5CvE,EAAe,SAAC,GAAgB,IAAdvB,EAAa,EAAbA,OACtBN,EAAS,CAAED,KAAMO,EAAOP,KAAMP,MAAOc,EAAOd,SAG9C,OACE,sBAAKb,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,SAA+BkB,IAC/B,8BACGuG,EAAQI,KAAI,SAACE,GAAD,OACX,sBACE/H,UAAU,+BADZ,UAIE,uBACEA,UAAU,mBACVmB,KAAK,QACLC,KAAMA,EACNM,GAAIqG,EAAO3G,KAAO,IAAM2G,EAAOlH,MAC/BA,MAAOkH,EAAOlH,MACdoB,QAAS8F,EAAOlH,QAAUA,EAC1BQ,SAAU6B,IAEZ,uBACElD,UAAU,mBACVyB,QAASsG,EAAO3G,KAAO,IAAM2G,EAAOlH,MAFtC,SAIGkH,EAAO3G,SAfL2G,EAAO3G,KAAO,IAAM2G,EAAOlH,gB,QCkC7BoH,EA7CU,SAAC,GAAsD,IAApDR,EAAmD,EAAnDA,QAASpG,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,KAAMF,EAA0B,EAA1BA,MAAOgH,EAAmB,EAAnBA,aACpDR,EACHC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK9BA,EAJA/E,OAAOC,KAAK8E,GAASI,KAAI,SAACC,GAAD,MAAiB,CACxC5G,MAAOuG,EAAQK,GAAY1G,KAC3BP,MAAO4G,EAAQK,GAAYnE,QAI7BwE,EACJD,GACAA,EAAatH,OAAS,GACtBsH,EAAaL,KAAI,SAACE,GAAD,MAAa,CAC5B7G,MAAO6G,EAAO3G,KACdP,MAAOkH,EAAOpE,QAOlB,OACE,sBAAK3D,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,SAA+BkB,IAC/B,cAAC,IAAD,CACEgH,aAAcC,EACdC,SAAO,EACPC,mBAAmB,EACnBZ,QAASC,EACT1H,UAAU,qBACVsI,gBAAgB,SAChBjH,SAde,SAACR,GACpBQ,EAAS,CAAED,KAAMA,EAAMP,WAcnBO,KAAMA,QC8FCmH,EAzHM,WAAO,IAAD,EACDjH,mBAAS,CAC/Ba,MAAO,GACPC,SAAU,GACV4C,WAAY,GACZD,IAAK,OACLT,UAAW,GACXkE,SAAS,IAPc,mBAClBpI,EADkB,KACZkC,EADY,OASShB,mBAAS,IATlB,mBASlBgD,EATkB,KASPmE,EATO,OAUGnH,mBAAS,IAVZ,mBAUlBhB,EAVkB,KAUViC,EAVU,OAWajB,qBAXb,mBAWlB2D,EAXkB,KAWLyD,EAXK,KAazBlG,qBAAU,WACRjC,MACC,CAACH,IAEJoC,qBAAU,WACRmG,EAAI1D,YAAYhB,WAAW2E,MAAK,SAACxI,GAC/BsI,EAAetI,MAEjBuI,EAAIrE,UAAUL,WAAW2E,MAAK,SAACxI,GAC7BqI,EAAarI,QAEd,IAEH,IAAMG,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMqC,GAE/B,OADAF,EAAUjC,GAC4B,IAA/BoC,OAAOC,KAAKrC,GAAQM,QAGvBgC,EAAyC,IAA/BF,OAAOC,KAAKrC,GAAQM,OAE9B6B,EAAiB,CACrBN,MAAO,CACLU,WAAY,CAAE/B,QAAS,wPACvBgC,QAAS,CAAEhC,QAAS,qNAEtBsB,SAAU,CACRS,WAAY,CAAE/B,QAAS,qLACvBiC,gBAAiB,CACfjC,QAAS,yRAEXkC,eAAgB,CAAElC,QAAS,kOAC3BmC,IAAK,CAAEnC,QAAS,iOAA8CD,MAAO,IAEvEmE,WAAY,CACVnC,WAAY,CAAE/B,QAAS,wMAEzB0H,QAAS,CAAE3F,WAAY,CAAE/B,QAAS,yMAG9BoC,EAAe,SAACvB,GACpBW,GAAQ,SAACT,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOP,KAAOO,EAAOd,YAUhE,OACE,uBAAMsC,SARa,SAACC,GACpBA,EAAEC,iBACc9C,KAEhB+C,QAAQC,IAAInD,IAIZ,UACE,cAAC,EAAD,CACEc,MAAM,QACNE,KAAK,QACLP,MAAOT,EAAK+B,MACZd,SAAU6B,EACVlC,MAAOV,EAAO6B,QAEhB,cAAC,EAAD,CACEjB,MAAM,WACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAKgC,SACZf,SAAU6B,EACVlC,MAAOV,EAAO8B,WAEhB,cAAC,EAAD,CACElB,MAAM,qIACNE,KAAK,aACLC,SAAU6B,EACVsE,cAAc,WACdC,QAASxC,EACTpE,MAAOT,EAAK4E,WACZhE,MAAOV,EAAO0E,aAEhB,cAAC,EAAD,CACE9D,MAAM,2FACNE,KAAK,MACLP,MAAOT,EAAK2E,IACZ0C,QAAS,CACP,CAAErG,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,WAE3BQ,SAAU6B,IAEZ,cAAC,EAAD,CACEuE,QAASnD,EACTjD,SAAU6B,EACV9B,KAAK,YACLF,MAAM,gIAER,eAAC,EAAD,CACEE,KAAK,UACLP,MAAOT,EAAKoI,QACZnH,SAAU6B,EACVlC,MAAOV,EAAOkI,QAJhB,gFAMc,yKAEd,wBAAQhF,UAAWZ,EAAS5C,UAAU,gCAAtC,wBCzES6I,EA7CD,WAAO,IACX1H,EAAS2H,cAAT3H,KADU,EAEcG,mBACrB,aAATH,EAAsBA,EAAO,SAHb,mBAEX4H,EAFW,KAEDC,EAFC,KAMZC,EAAiB,WACrBD,GAAY,SAACnH,GAAD,MACI,aAAdA,EAA2B,QAAU,eAIzC,OACE,qBAAK7B,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,kCAAf,SACgB,aAAb+I,EACC,qCACE,oBAAI/I,UAAU,OAAd,sBACA,cAAC,EAAD,IACA,qDACuB,IACrB,mBAAGkJ,KAAK,SAAStH,QAASqH,EAA1B,2BAMJ,qCACE,oBAAIjJ,UAAU,OAAd,mBACA,cAAC,EAAD,IACA,mDACqB,IACnB,mBAAGkJ,KAAK,SAAStH,QAASqH,EAA1B,kCCVDE,EAzBM,SAAC,GAA2B,IAAzBjE,EAAwB,EAAxBA,kBACtB,OACE,qBAAKlF,UAAU,YAAf,SACE,sBACEA,UAAU,oEADZ,UASE,oBAAIA,UAAU,aAAd,SACE,wDAGF,oBAAIA,UAAU,YAAd,SAA2BkF,UC8BpBkE,EA9CE,SAAC,GAA4C,IAA1ChI,EAAyC,EAAzCA,KAAM4D,EAAmC,EAAnCA,WAAYG,EAAuB,EAAvBA,KAAMkE,EAAiB,EAAjBA,WAC1C,OACE,qBAAKrJ,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,wBACEA,UAAU,qDACV4B,QAASyH,EAFX,SAIE,mBAAGrJ,UAAU,iBAEf,sBAAKA,UAAU,sEAAf,UACE,qBACEsJ,IAAG,sDACDvC,KAAKC,SAAW,GAEfC,SAAS,IACTsC,UAAU,GAJV,QAKHvJ,UAAU,sCACVwJ,IAAI,SACJC,MAAM,KACNC,OAAO,OAET,sBAAK1J,UAAU,OAAf,UACE,6BAAKoB,IACL,mBAAGpB,UAAU,sBAAb,SAAoCgF,IACpC,sBAAKhF,UAAU,aAAf,UACE,mBACEA,UAAU,qCACVkJ,KAAK,WAEP,mBAAGlJ,UAAU,gCAAgCkJ,KAAK,WAClD,sBAAMlJ,UAAU,OAAhB,SAAwBmF,mBClBvBwE,EAbG,SAAC,GAA0B,IAAxBnF,EAAuB,EAAvBA,MAAOpD,EAAgB,EAAhBA,KAAMuC,EAAU,EAAVA,IAChC,OACE,sBAAgB3D,UAAW,gBAAkBwE,EAA7C,SACGpD,GADQuC,ICJAgG,ECGO,SAAC,GAAmB,IAAjBrF,EAAgB,EAAhBA,UACvB,OACE,mCACGA,EAAUuD,KAAI,SAAC+B,GAAD,OACb,cAAC,EAAD,eAAkCA,GAAlBA,EAASjG,WCclBkG,EAlBO,SAAC,GAAmB,IAAjBvF,EAAgB,EAAhBA,UACvB,OACE,qBAAKtE,UAAU,YAAf,SACE,sBAAKA,UAAU,kEAAf,UACE,oBAAIA,UAAU,aAAd,SACE,+CAEF,mBAAGA,UAAU,YAAb,SACE,cAAC,EAAD,CAAWsE,UAAWA,YC0DjBwF,EAlEC,SAAC,GAAwD,IAAtDrC,EAAqD,EAArDA,QAAiBsC,GAAoC,EAA5C5D,OAA4C,EAApC4D,eAAe1I,EAAqB,EAArBA,SAAUjB,EAAW,EAAXA,KAC3DqH,EAAUA,EAAQI,KAAI,SAACE,GAAD,MAAa,CAAE3G,KAAM2G,EAAO3G,KAAMP,MAAOkH,EAAOpE,QAEtE,IAAMT,EAAe,SAACvB,GACpB2B,QAAQC,IAAI,sBAAuB5B,GAEnCN,EAASM,IAaX,OACE,qBAAK3B,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,gCACE,6CACA,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CACEoB,KAAK,SACLP,MAAOT,EAAK+F,OACZ9E,SAAU6B,EACVsE,cAAc,4HACdC,QAASA,MAGb,sBAAKzH,UAAU,OAAf,UACE,uBAAOyB,QAAQ,8BAA8BzB,UAAU,aAAvD,oEAGA,0BACEA,UAAU,eACV0B,GAAG,8BACHN,KAAK,8BACL4I,KAAK,IACLnJ,MAAOT,EAAKiG,QACZhF,SAAU6B,OAGd,wBACE/B,KAAK,SACLnB,UAAU,kBACV4B,QAlCY,WACpBmI,EAAc3J,IA8BR,8FCwBK6J,EAvEM,SAAC,GAAwC,IAAtCnF,EAAqC,EAArCA,MAAOoB,EAA8B,EAA9BA,SAAUgE,EAAoB,EAApBA,cACvC5G,QAAQC,IAAI,mBAAoBuB,GAWhC,OACE,qBAAK9E,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,0CACA,uBAECkG,EAAS2B,KAAI,SAACsC,GAAD,OACZ,qBAAKnK,UAAU,0BAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBACEsJ,IAAG,sDACDvC,KAAKC,SAAW,GAEfC,SAAS,IACTsC,UAAU,GAJV,QAKHvJ,UAAU,sCACVwJ,IAAI,SACJC,MAAM,KACNC,OAAO,OAET,qBAAK1J,UAAU,4BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,oBAAGA,UAAU,OAAb,WA9BImG,EA+BgBgE,EAAQhE,OA9BzCrB,EAAM2B,QAAO,SAACZ,GAAD,OAAUA,EAAKlC,MAAQwC,KAAQ,GAAG/E,MA+BhC,sBAAMpB,UAAU,QAAhB,SACamK,EAAQ7D,gBAGvB,wBACEtG,UAAU,oDACV4B,QAAS,kBAAMsI,EAAcC,EAAQxG,MAFvC,SAIE,mBAAG3D,UAAU,oBAGjB,mBAAGA,UAAU,aAAb,SAA2BmK,EAAQ9D,uBA/BD8D,EAAQxG,KAZrC,IAACwC,WCTbiE,ECSE,SAAC,GAAgB,IAAdjE,EAAa,EAAbA,OACZkE,EAAUC,cADe,EAEPhJ,qBAFO,mBAExBuE,EAFwB,KAElB0E,EAFkB,OAGLjJ,qBAHK,mBAGxBwD,EAHwB,KAGjB0F,EAHiB,OAKelJ,qBALf,mBAKxBmJ,EALwB,KAKPC,EALO,OAOapJ,mBAAS,CACnD6E,OAAQ,GACRC,OAAQD,EACRE,QAAS,KAVoB,mBAOxBsE,EAPwB,KAORC,EAPQ,KAa/BpI,qBAAU,WACRmG,EAAI7D,MAAMa,QAAQQ,GAAQyC,MAAK,SAACxI,GAC9BmK,EAAQnK,MAEVuI,EAAI7D,MAAMb,WAAW2E,MAAK,SAACxI,GACzBoK,EAASpK,MAEXuI,EAAIzC,SAASM,qBAAqBL,GAAQyC,MAAK,SAACxI,GAC9CsK,EAAmBtK,QAEpB,IAEHkD,QAAQC,IAAI,kBAAmBkH,GAM/BnH,QAAQC,IAAI,WAAYsC,GAmCxB,OAAIA,EAEA,qCACE,sBAAK7F,UAAU,gBAAf,UACE,cAAC,EAAD,CACEoB,KAAMyE,EAAKzE,KACX4D,WAAYa,EAAKb,WAAW5D,KAC5B+D,KAAMU,EAAKV,KACXkE,WA/Ca,WACrBgB,EAAQlD,KAAR,iBAAuBhB,EAAvB,aAgDM,cAAC,EAAD,CAAe7B,UAAWuB,EAAKvB,YAC/B,cAAC,EAAD,CAAcY,kBAAmBW,EAAKX,uBAGxC,sBAAKlF,UAAU,WAAf,UACG8E,GACC,cAAC,EAAD,CACE1E,KAAMuK,EACNlD,QAAS3C,EACTqB,OAAQA,EACR4D,cA3CU,SAAC3J,GACrBuI,EAAIzC,SAASS,IAAIvG,GACjBwK,EAAkB,CAAEzE,OAAQ,GAAIC,OAAQD,EAAQE,QAAS,MA0C/ChF,SAnCS,SAACM,GAAY,IAAD,EACH,iCAAxB,UAAAA,EAAOA,cAAP,eAAeP,MACjBwJ,GAAkB,SAAC/I,GAAD,mBAAC,eACdA,GADa,IAEhBwE,QAAS1E,EAAOA,OAAOd,WAGzB+J,GAAkB,SAAC/I,GAAD,mBAAC,eACdA,GADa,kBAEfF,EAAOP,KAAOO,EAAOd,cA8BnB4J,GAAmB3F,GAClB,cAAC,EAAD,CACEA,MAAOA,EACPoB,SAAUuE,EACVP,cA9DU,SAACW,GACrBvH,QAAQC,IAAI,YAAasH,GAEzBlC,EAAIzC,SAASkB,OAAOyD,GAEpBlC,EAAIzC,SAASM,qBAAqBL,GAAQyC,MAAK,SAACxI,GAC9CsK,EAAmBtK,eA+DhB,c,kCC3EM0K,EAjCI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAClDC,EAAYpE,KAAKqE,KAAKL,EAAaC,GAEzC,GAAkB,IAAdG,EAAiB,OAAO,KAC5B,IAAME,EAAQC,IAAEC,MAAM,EAAGJ,EAAY,GACrC,OACE,qBAAKK,aAAW,MAAhB,SACE,oBAAIxL,UAAU,aAAd,SACGqL,EAAMxD,KAAI,SAAC4D,GACV,OACE,oBAEEzL,UACE,cAAgByL,IAASP,EAAc,SAAW,QAHtD,SAME,mBAAGlL,UAAU,YAAY4B,QAAS,kBAAMqJ,EAAaQ,IAArD,SACGA,KANEA,WCZnB,IAAMC,EAAY,SAAC,GAMZ,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OAAIpE,MAAMC,QAAQ+D,GAEd,oBAAI3L,UAAU,aAAd,SACG2L,EAAM9D,KAAI,SAACmE,GAAD,OACT,oBAEEhM,UACE,mBAAqBgM,IAASD,EAAe,UAAY,IAE3DnK,QAAS,kBAAMkK,EAAaE,IAC5B9C,KAAK,SANP,SAQG8C,EAAKH,IAPDG,EAAKJ,SAclB,oBAAI5L,UAAU,aAAd,SACG0C,OAAOC,KAAKgJ,GAAO9D,KAAI,SAACmE,GAAD,OACtB,oBAEEhM,UACE,mBAAqB2L,EAAMK,KAAUD,EAAe,UAAY,IAElEnK,QAAS,kBAAMkK,EAAaH,EAAMK,KAClC9C,KAAK,SANP,SAQGyC,EAAMK,GAAMH,IAPRF,EAAMK,GAAMJ,UAa3BF,EAAU5J,aAAe,CACvB8J,cAAe,MACfC,gBAAiB,QAUJH,QClCAO,EApBM,SAAC,GAAgB,IAAdrL,EAAa,EAAbA,OAMtB,OACE,6BACE,sBAAMZ,UAAW,aAAeY,EAAS,EAAI,UAAY,UAAzD,SACGA,EAAS,EAAT,UACMA,EADN,YAPDA,EAAS,GAAKA,EAAS,EAAU,8FAC9B,wFAMF,qFAEG,oI,QCEGsL,EAbE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAWC,EAAW,0BACxC,OACE,kDAAYA,GAAZ,aACE,mBAAGpM,UAAW,kBAAoBmM,EAAS,QAAU,UC+C5CE,EAlDK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAsB3C,OACE,gCACE,6BACG9J,OAAOC,KAAK6J,GAAS3E,KAAI,SAAC4E,GAAD,OACxB,qBAEE7K,QACE4K,EAAQC,GAAQC,KACZ,kBA7BIV,EA6BaQ,EAAQC,GAAQC,UA5B3CH,EAAaG,OAASV,EACxBM,EAAO,2BACFC,GADC,IAEJI,MAA8B,QAAvBJ,EAAaI,MAAkB,OAAS,SAGjDL,EAAO,CAAEI,KAAMV,EAAMW,MAAO,SAPb,IAACX,QA8BJY,EAEA1D,KAAMsD,EAAQC,GAAQC,MAAQ,SACpCG,MAAM,MARR,UAUGL,EAAQC,GAAQrL,MAzBF0L,EA0BEN,EAAQC,GAAQC,KAzBrCH,EAAaG,OAASI,EACG,QAAvBP,EAAaI,MACR,mBAAG3M,UAAU,wBAEb,mBAAGA,UAAU,0BAGf,QAQIyM,GAhBS,IAACK,UCmBZC,GA7BG,SAAC,GAAuB,IAArB3M,EAAoB,EAApBA,KAAMoM,EAAc,EAAdA,QACnBQ,EAAgB,SAAChB,EAAMS,GAC3B,GAAID,EAAQC,GAAQQ,UAAW,CAC7B,IAAMA,EAAYT,EAAQC,GAAQQ,UAClC,MAAyB,oBAAdA,EACFA,EAAUjB,GAEZiB,EAET,OAAO3B,IAAE4B,IAAIlB,EAAMQ,EAAQC,GAAQC,OAGrC,OACE,gCACGtM,EAAKyH,KAAI,SAACmE,GAAD,OACR,6BACGtJ,OAAOC,KAAK6J,GAAS3E,KAAI,SAAC4E,GAAD,OACxB,6BAAkBO,EAAchB,EAAMS,IAA7BA,OAFJT,EAAKrI,WCfPwJ,GCCD,SAAC,GAAuD,IAArDb,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,QAASpM,EAAqB,EAArBA,KAAM4B,EAAe,EAAfA,SACpD,OACE,uBAAOhC,UAAU,QAAjB,SACGgC,GACC,qCACE,cAAC,EAAD,CAAmBsK,SAAQC,eAAcC,YAEzC,cAAC,GAAD,CAAiBpM,OAAMoM,kBC2DlBY,GAhEI,SAAC,GAMb,IALLtI,EAKI,EALJA,MACAwH,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAc,EAEI,EAFJA,iBACAC,EACI,EADJA,SAEMd,EAAU,CACdpL,KAAM,CACJsL,KAAM,OACNtL,KAAM,qBACN6L,UAAW,SAACpH,GAAD,OAAU,cAAC,IAAD,CAAM5F,GAAE,iBAAY4F,EAAKlC,KAAzB,SAAiCkC,EAAKzE,SAE7DkD,UAAW,CACTlD,KAAM,mDACN6L,UAAW,SAACpH,GAAD,OAAU,cAAC,EAAD,CAAWvB,UAAWuB,EAAKvB,cAElDW,YAAa,CAAEyH,KAAM,kBAAmBtL,KAAM,0DAC9C8D,kBAAmB,CACjBwH,KAAM,oBACNtL,KAAM,oFAER+D,KAAM,CAAEuH,KAAM,OAAQtL,KAAM,8CAC5BgE,SAAU,CACRsH,KAAM,WACNtL,KAAM,yDACN6L,UAAW,SAACpH,GAAD,OACT,cAAC,EAAD,CACEsG,OAAQtG,EAAKT,SACbxD,QAAS,kBAAMyL,EAAiBxH,EAAKlC,UAI3C4J,OAAQ,CACNN,UAAW,SAACpH,GAAD,OACT,wBACEjE,QAAS,WACP0L,EAASzH,EAAKlC,MAEhB3D,UAAU,wBAJZ,uBAWN,OACE,cAAC,GAAD,CACEsM,OAAQA,EACRC,aAAcA,EACdC,QAASA,EACTpM,KAAM0E,KCzDG0I,GCWO,WAAO,IAAD,EACYlM,mBAAS,GADrB,mBACnB4J,EADmB,KACNuC,EADM,OAEYnM,qBAFZ,mBAEnB2D,EAFmB,KAENyD,EAFM,OAGcpH,qBAHd,mBAGnBoM,EAHmB,KAGLC,EAHK,OAIUrM,mBAAS,IAJnB,mBAInBsM,EAJmB,KAIPC,EAJO,KAMpBC,EAAWC,cAEXC,EAASC,IAAMvI,MAAMoI,EAASE,QAE/BF,EAASE,SACZA,EAAOE,OAAS,OAChBF,EAAOrB,MAAQ,OAZS,MAeErL,mBAAS,CACnCoL,KAAMsB,EAAOE,OACbvB,MAAOqB,EAAOrB,QAjBU,mBAenBuB,EAfmB,KAeXC,EAfW,OAqBA7M,qBArBA,mBAqBnBwD,EArBmB,KAqBZ0F,EArBY,KAuB1BhI,qBAAU,WACRmG,EAAI7D,MAAMb,WAAW2E,MAAK,SAACxI,GACzBoK,EAASpK,QAEV,IAqBHoC,qBAAU,WACRmG,EAAI1D,YAAYhB,WAAW2E,MAAK,SAACxI,GAC/BsI,EAAetI,QAEhB,IAEHoC,qBAAU,WACRiL,EAAe,KACd,CAACC,EAAcE,IAmBlB,GAAI9I,EAAO,CACT,IAAMsJ,EAAgBR,EAClB9I,EAAM2B,QAAO,SAACZ,GAAD,OAAUA,EAAKzE,KAAKiN,cAAcC,SAASV,MACxDF,EACA5I,EAAM2B,QACJ,SAACZ,GAAD,OACEL,KAAKC,UAAUI,EAAKb,cAAgBQ,KAAKC,UAAUiI,MAEvD5I,EAEEyJ,EAAQ5G,MAAMC,QAAQwG,IAAkBA,EAAcxN,OAEtD4N,ECjGH,SAAkB7C,EAAO8C,EAAYzD,GAC1C,IAAM0D,GAAcD,EAAa,GAAKzD,EACtC,OAAOM,IAAEK,GAAOgD,MAAMD,GAAYE,KAAK5D,GAAUnK,QD+F7BgO,CADEvD,IAAEwD,QAAQV,EAAe,CAACF,EAAOxB,MAAO,CAACwB,EAAOvB,QAC5BzB,EApEzB,GA0Ef,OACE,sBAAKlL,UAAU,SAAf,UACGiF,GACC,sBAAKjF,UAAU,uCAAf,UACE,cAAC,EAAD,CACE+L,aAAc2B,EACd/B,MAAO1G,EACP6G,aA1CmB,SAACE,GAC9B6B,EAAc,IACdF,EAAgB3B,MA0CR,wBAAQpK,QAbI,WAClB+L,KAYoC3N,UAAU,yBAAxC,iEAKJ,sBAAKA,UAAU,qBAAf,UACE,cAAC,EAAD,CAAcY,OAAQ2N,IACtB,uBACEpN,KAAK,OACLnB,UAAU,gBACVoB,KAAK,aACLP,MAAO+M,EACPvM,SA3CiB,SAAC+B,GAC1BuK,OAAgBf,GAChBiB,EAAczK,EAAEzB,OAAOd,QA0CfkO,YAAY,cAGbR,EAAQ,GACP,cAAC,GAAD,CACEzJ,MAAO0J,EACPlC,OAtDO,SAACN,GAClBmC,EAAUnC,IAsDAO,aAAc2B,EACdZ,SA9FS,SAACnH,GACpBqE,EACE1F,EAAM2B,QAAO,SAACZ,GACZ,OAAOA,EAAKlC,MAAQwC,OA4FdkH,iBAvFiB,SAAClH,GAC5BqE,EACE1F,EAAM+C,KAAI,SAAChC,GAIT,OAHIA,EAAKlC,MAAQwC,IACfN,EAAKT,UAAYS,EAAKT,UAEjBS,SAoFL,qBAAK7F,UAAU,gCAAf,SACE,cAAC,EAAD,CACE+K,WAAYwD,EACZvD,SA/GK,EAgHLE,YAAaA,EACbD,aArEa,SAAC+D,GACxBvB,EAAeuB,cA2EjB,MAAO,cEtJMC,GCUM,SAAC,GAAgB,IAAd9I,EAAa,EAAbA,OAChBkE,EAAUC,cADmB,EAGXhJ,qBAHW,mBAG5BlB,EAH4B,KAGtBkC,EAHsB,OAIDhB,mBAAS,IAJR,mBAI5BgD,EAJ4B,KAIjBmE,EAJiB,OAKPnH,mBAAS,IALF,mBAK5BhB,EAL4B,KAKpBiC,EALoB,OAMGjB,qBANH,mBAM5B2D,EAN4B,KAMfyD,EANe,KAQnClG,qBAAU,WACRjC,MACC,CAACH,IAEJoC,qBAAU,WACRmG,EAAI1D,YAAYhB,WAAW2E,MAAK,SAACxI,GAC/BsI,EAAetI,MAEjBuI,EAAIrE,UAAUL,WAAW2E,MAAK,SAACxI,GAC7BqI,EAAarI,MAGfuI,EAAI7D,MAAMa,QAAQQ,GAAQyC,MAAK,SAACxI,GAC9BkC,EAAQ,2BACHlC,GADE,IAEL2E,IAAK3E,EAAK2E,IAAM3E,EAAK2E,IAAM,OAC3B5C,MAAO/B,EAAK+B,MAAQ/B,EAAK+B,MAAQ,WAGpC,IAEH,IAAM5B,EAAW,WACf,IAAMD,EAASH,EAAUC,EAAMqC,GAE/B,OADAF,EAAUjC,GAC4B,IAA/BoC,OAAOC,KAAKrC,GAAQM,QAGvBgC,EAAyC,IAA/BF,OAAOC,KAAKrC,GAAQM,OAE9B6B,EAAiB,CACrBrB,KAAM,CAAEyB,WAAY,CAAE/B,QAAS,gLAC/BqB,MAAO,CACLU,WAAY,CAAE/B,QAAS,wPACvBgC,QAAS,CAAEhC,QAAS,sNAOlBoC,EAAe,SAACvB,GACpBW,GAAQ,SAACT,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOP,KAAOO,EAAOd,YAmD1DqO,EAAe,SAAC9L,GAGpB,GAFAA,EAAEC,iBACc9C,IAChB,CAEA,IAAM4O,EArDa,WACnB,IAAMC,EACHzH,MAAMC,QAAQ3C,IAAuC,kBAAhBA,EAKlCA,EAJAvC,OAAOC,KAAKsC,GAAa4C,KAAI,SAAC7C,GAAD,MAAiB,CAC5C5D,KAAM6D,EAAYD,GAAY5D,KAC9BuC,IAAKsB,EAAYD,GAAYrB,QAI/B0L,EACH1H,MAAMC,QAAQtD,IAAmC,kBAAdA,EAMhCA,EALA5B,OAAOC,KAAK2B,GAAWuD,KAAI,SAAC+B,GAAD,MAAe,CACxCxI,KAAMkD,EAAUsF,GAAUxI,KAC1BuC,IAAKW,EAAUsF,GAAUjG,IACzBa,MAAOF,EAAUsF,GAAUpF,UAM7B8K,EACJ5M,OAAOC,KAAKvC,EAAKkE,UAAU,IAAI1D,OAAS,EACpCR,EAAKkE,UACLlE,EAAKkE,UAAUuD,KAAI,SAAC0H,GAOlB,OANAjM,QAAQC,IACN8L,EAAe5I,QACb,SAACmD,GAAD,OAAcA,EAASjG,MAAQ4L,EAAa1O,SAC5C,IAGGwO,EAAe5I,QACpB,SAACmD,GAAD,OAAcA,EAASjG,MAAQ4L,EAAa1O,SAC5C,MAaV,OAXAyC,QAAQC,IAAI,gBAAiB+L,GAErB,2BACHlP,GADG,IAEN4E,WAC6B,kBAApB5E,EAAK4E,WACR5E,EAAK4E,WACLoK,EAAiB3I,QAAO,SAAC+I,GAAD,OAAUA,EAAK7L,MAAQvD,EAAK4E,cAAY,GACtEV,UAAWgL,IAWQG,GAEfC,EAAU/G,EAAI7D,MAAMgB,OAAOK,EAAQgJ,GACzC7L,QAAQC,IAAI,cAAemM,GAE3BrF,EAAQsF,QAAR,iBAA0BxJ,MAc5B,OAAI/F,EAEA,qBAAKJ,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yBACEmB,KAAK,SACLnB,UAAU,uBACV4B,QAZS,WACnByI,EAAQlD,KAAR,iBAAuBhB,KAQf,UAKE,mBAAGnG,UAAU,yBALf,oCAQA,uBAAMmD,SAAU+L,EAAhB,UACE,cAAC,EAAD,CACEhO,MAAM,qBACNE,KAAK,OACLP,MAAOT,EAAKgB,KACZC,SAAU6B,EACVlC,MAAOV,EAAOc,OAEhB,cAAC,EAAD,CACEF,MAAM,oGACNC,KAAK,OACLC,KAAK,QACLP,MAAOT,EAAK+B,MACZd,SAAU6B,EACVlC,MAAOV,EAAO6B,QAEhB,cAAC,EAAD,CACEjB,MAAM,qIACNE,KAAK,aACLC,SAAU6B,EACVsE,cAAc,WACdC,QAASxC,EACTpE,MAAOT,EAAK4E,WAAWrB,IACvB3C,MAAOV,EAAO0E,aAEhB,cAAC,EAAD,CACE9D,MAAM,2FACNE,KAAK,MACLP,MAAOT,EAAK2E,IACZ0C,QAAS,CACP,CAAErG,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,WAE3BQ,SAAU6B,IAEZ,cAAC,EAAD,CACEuE,QAASnD,EACT4D,aAAc9H,EAAKkE,UACnBjD,SAAU6B,EACV9B,KAAK,YACLF,MAAM,gIAER,wBAEEU,QAASsN,EACT1L,UAAWZ,EACX5C,UAAU,gCAJZ,wEAcL,cCpLM4P,GAlBD,WACZ,IAAMC,EAAS/G,cACP3C,EAAiB0J,EAAjB1J,OAAQ2J,EAASD,EAATC,KAEhB,OAAI3J,EACK2J,EACL,cAAC,GAAD,CAAc3J,OAAQA,IAEtB,qBAAKnG,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAUmG,OAAQA,QAKnB,cAAC,GAAD,KCAM4J,GAdH,WACV,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOrD,KAAK,IAAIsD,OAAK,EAAC/C,UAAW/M,IACjC,cAAC,IAAD,CAAOwM,KAAK,gBAAgBO,UAAWpE,IACvC,cAAC,IAAD,CAAO6D,KAAK,yBAAyBO,UAAW2C,KAChD,cAAC,IAAD,CAAU3P,GAAG,aCHNgQ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvH,MAAK,YAAkD,IAA/CwH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.d2c3d52a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <ul className=\"nav nav-pills\">\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/\">\n          Main\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/login\">\n          Login\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/users\">\n          Users\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Main = () => {\n  return <h1>Main</h1>;\n};\n\nexport default Main;\n","export function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\": {\n        if (typeof data === \"boolean\") {\n          statusValidate = !data;\n        } else {\n          statusValidate = data.trim() === \"\";\n        }\n        break;\n      }\n      case \"isEmail\": {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n        statusValidate = !emailRegExp.test(data);\n        break;\n      }\n      case \"isCapitalSymbol\": {\n        const capitalRegExp = /[A-Z]+/g;\n        statusValidate = !capitalRegExp.test(data);\n        break;\n      }\n      case \"isContainDigit\": {\n        const digitRegExp = /\\d+/g;\n        statusValidate = !digitRegExp.test(data);\n        break;\n      }\n      case \"min\": {\n        statusValidate = data.length < config.value;\n        break;\n      }\n      default:\n        break;\n    }\n\n    if (statusValidate) return config.message;\n  }\n\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group has-validation\">\n        <input\n          type={showPassword ? \"text\" : type}\n          value={value}\n          name={name}\n          id={name}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n        {type === \"password\" && (\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={toggleShowPassword}\n          >\n            <i className={\"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")}></i>\n          </button>\n        )}\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\nTextField.defaultProps = {\n  type: \"text\"\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n  const handleChange = () => {\n    onChange({ name: name, value: !value });\n  };\n\n  const getInputClasses = () => {\n    return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  return (\n    <div className=\"form-check mb-4\">\n      <input\n        className={getInputClasses()}\n        type=\"checkbox\"\n        value=\"\"\n        id={name}\n        onChange={handleChange}\n        checked={value}\n      />\n      <label className=\"form-check-label\" htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nCheckBoxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useState, useEffect } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n  const [data, setData] = useState({ email: \"\", password: \"\", stayOn: false });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    },\n    password: {\n      isRequired: { message: \"Пароль обязателен для заполнения\" },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: { message: \"Пароль должен содержать хотя бы одну цифру\" },\n      min: { message: \"Пароль должен содержать минимум 8 символов\", value: 8 }\n    }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <CheckBoxField name=\"stayOn\" value={data.stayOn} onChange={handleChange}>\n        Оставаться в системе\n      </CheckBoxField>\n      <button disabled={!isValid} className=\"btn btn-primary w-100 mx-auto\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","export const professionsObject = {\n  doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n  waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n  physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n  engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n  actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n  cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n  { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n  { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n  { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n  { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n  { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n  { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n  tedious: {\n    _id: \"67rdca3eeb7f6fgeed471198\",\n    name: \"Нудила\",\n    color: \"primary\"\n  },\n  strange: {\n    _id: \"67rdca3eeb7f6fgeed471100\",\n    name: \"Странный\",\n    color: \"secondary\"\n  },\n  buller: {\n    _id: \"67rdca3eeb7f6fgeed4711012\",\n    name: \"Троль\",\n    color: \"success\"\n  },\n  alcoholic: {\n    _id: \"67rdca3eeb7f6fgeed471101\",\n    name: \"Алкоголик\",\n    color: \"danger\"\n  },\n  handsome: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Красавчик\",\n    color: \"info\"\n  },\n  uncertain: {\n    _id: \"67rdca3eeb7f6fgeed471103\",\n    name: \"Неуверенный\",\n    color: \"dark\"\n  }\n};\n\nconst users = [\n  {\n    _id: \"67rdca3eeb7f6fgeed471815\",\n    name: \"Джон Дориан\",\n    email: \"johndorian@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471816\",\n    name: \"Кокс\",\n    email: \"koks@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471817\",\n    name: \"Боб Келсо\",\n    email: \"bobkelso@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471818\",\n    name: \"Рэйчел Грин\",\n    email: \"rachelgreene@fastcompany.ru\",\n    sex: \"female\",\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471819\",\n    name: \"Шелдон Купер\",\n    email: \"sheldoncooper@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471820\",\n    name: \"Леонард Хофстедтер\",\n    email: \"leonardhofstedter@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471821\",\n    name: \"Говард Воловиц\",\n    email: \"howardwolowitz@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471822\",\n    name: \"Никола Тесла\",\n    email: \"nikolatesla@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471823\",\n    name: \"Моника Геллер\",\n    email: \"monicageller@fastcompany.ru\",\n    sex: \"female\",\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed471824\",\n    name: \"Рататуй\",\n    email: \"ratatouille@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181f\",\n    name: \"Джоуи Триббиани\",\n    email: \"joeytribbiani@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: \"67rdca3eeb7f6fgeed47181r\",\n    name: \"Брэд Питт\",\n    email: \"bradpitt@fastcompany.ru\",\n    sex: \"male\",\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n];\nif (!localStorage.getItem(\"users\")) {\n  localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem(\"users\")));\n    }, 2000);\n  });\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem(\"users\"));\n    const userIndex = users.findIndex((u) => u._id === id);\n    users[userIndex] = { ...users[userIndex], ...data };\n    localStorage.setItem(\"users\", JSON.stringify(users));\n    resolve(users[userIndex]);\n  });\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"users\")).find(\n          (user) => user._id === id\n        )\n      );\n    }, 1000);\n  });\nexport default {\n  fetchAll,\n  getById,\n  update\n};\n","const qualities = {\n  tedious: {\n    _id: \"67rdca3eeb7f6fgeed471198\",\n    name: \"Нудила\",\n    color: \"primary\"\n  },\n  strange: {\n    _id: \"67rdca3eeb7f6fgeed471100\",\n    name: \"Странный\",\n    color: \"secondary\"\n  },\n  buller: {\n    _id: \"67rdca3eeb7f6fgeed4711012\",\n    name: \"Троль\",\n    color: \"success\"\n  },\n  alcoholic: {\n    _id: \"67rdca3eeb7f6fgeed471101\",\n    name: \"Алкоголик\",\n    color: \"danger\"\n  },\n  handsome: {\n    _id: \"67rdca3eeb7f6fgeed471102\",\n    name: \"Красавчик\",\n    color: \"info\"\n  },\n  uncertain: {\n    _id: \"67rdca3eeb7f6fgeed471103\",\n    name: \"Неуверенный\",\n    color: \"dark\"\n  }\n};\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities);\n    }, 2000);\n  });\n\nexport default {\n  fetchAll\n};\n","const comments = [\n  {\n    _id: \"67rdca3eeb7f6fg\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    pageId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor\",\n    created_at: \"1633576399367\"\n  },\n  {\n    _id: \"67rdca3eeb7f6fgdasd\",\n    pageId: \"67rdca3eeb7f6fgeed471815\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor and etc\",\n    created_at: \"1633573058520\"\n  },\n  {\n    _id: \"67rdca3eeb7f6fgdaasd\",\n    pageId: \"67rdca3eeb7f6fgeed471817\",\n    userId: \"67rdca3eeb7f6fgeed471815\",\n    content: \"Lorem ipsum dolor and etc\",\n    created_at: \"1633573058520\"\n  }\n];\nif (!localStorage.getItem(\"comments\")) {\n  localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(comments);\n    }, 200);\n  });\n\nconst fetchCommentsForUser = (userId) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem(\"comments\")).filter(\n          (c) => c.pageId === userId\n        )\n      );\n    }, 200);\n  });\nconst add = (data) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem(\"comments\"));\n      const newComment = {\n        ...data,\n        created_at: Date.now(),\n        _id: Math.random().toString(36).substr(2, 9)\n      };\n      comments.push(newComment);\n      localStorage.setItem(\"comments\", JSON.stringify(comments));\n      resolve(newComment);\n    }, 200);\n  });\n\nconst remove = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem(\"comments\"));\n      const newComments = comments.filter((x) => x._id !== id);\n      console.log(id);\n      console.log(newComments);\n      localStorage.setItem(\"comments\", JSON.stringify(newComments));\n      resolve(id);\n    }, 200);\n  });\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n};\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n};\nexport default API;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectForm = ({\n  label,\n  name,\n  value,\n  onChange,\n  defaultOption,\n  options,\n  error\n}) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n          name: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options;\n\n  const getInputClasses = () => {\n    return \"form-select\" + (error ? \" is-invalid\" : \"\");\n  };\n\n  const handleChange = ({ target }) => {\n    console.log(\"target selectForm \", target.value);\n\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label htmlFor=\"validationCustom04\" className=\"form-label\">\n        {label}\n      </label>\n      <select\n        className={getInputClasses()}\n        id=\"validationCustom04\"\n        name={name}\n        value={value}\n        onChange={handleChange}\n      >\n        <option disabled value=\"\">\n          {defaultOption}\n        </option>\n        {optionsArray &&\n          optionsArray.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.name}\n            </option>\n          ))}\n      </select>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nSelectForm.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultOption: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  error: PropTypes.string\n};\n\nexport default SelectForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ label, name, value, onChange, options }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <div>\n        {options.map((option) => (\n          <div\n            className=\"form-check form-check-inline\"\n            key={option.name + \"_\" + option.value}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name={name}\n              id={option.name + \"_\" + option.value}\n              value={option.value}\n              checked={option.value === value}\n              onChange={handleChange}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor={option.name + \"_\" + option.value}\n            >\n              {option.name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nRadioField.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.array\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === \"object\"\n      ? Object.keys(options).map((optionName) => ({\n          label: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options;\n\n  const defaultValueArray =\n    defaultValue &&\n    defaultValue.length > 0 &&\n    defaultValue.map((option) => ({\n      label: option.name,\n      value: option._id\n    }));\n\n  const handleChange = (value) => {\n    onChange({ name: name, value });\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"form-label\">{label}</label>\n      <Select\n        defaultValue={defaultValueArray}\n        isMulti\n        closeMenuOnSelect={false}\n        options={optionsArray}\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={handleChange}\n        name={name}\n      />\n    </div>\n  );\n};\nMultiSelectField.propTypes = {\n  options: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React, { useState, useEffect } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport api from \"../../API\";\nimport SelectForm from \"../common/form/selectForm\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n    license: false\n  });\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const [professions, setProfessions] = useState();\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n    api.qualities.fetchAll().then((data) => {\n      setQualities(data);\n    });\n  }, []);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    },\n    password: {\n      isRequired: { message: \"Пароль обязателен для заполнения\" },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: { message: \"Пароль должен содержать хотя бы одну цифру\" },\n      min: { message: \"Пароль должен содержать минимум 8 символов\", value: 8 }\n    },\n    profession: {\n      isRequired: { message: \"Обязательно выберите вашу профессию\" }\n    },\n    license: { isRequired: { message: \"Обязательно нужно приять соглашение\" } }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Email\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectForm\n        label=\"Выберите вашу профессию: \"\n        name=\"profession\"\n        onChange={handleChange}\n        defaultOption=\"Chose...\"\n        options={professions}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        label=\"Выберите ваш пол: \"\n        name=\"sex\"\n        value={data.sex}\n        options={[\n          { name: \"Male\", value: \"male\" },\n          { name: \"Female\", value: \"female\" }\n        ]}\n        onChange={handleChange}\n      />\n      <MultiSelectField\n        options={qualities}\n        onChange={handleChange}\n        name=\"qualities\"\n        label=\"Выберите ваши качества:\"\n      />\n      <CheckBoxField\n        name=\"license\"\n        value={data.license}\n        onChange={handleChange}\n        error={errors.license}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button disabled={!isValid} className=\"btn btn-primary w-100 mx-auto\">\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n  const { type } = useParams();\n  const [formType, setFormType] = useState(\n    type === \"register\" ? type : \"login\"\n  );\n\n  const toggleFormType = () => {\n    setFormType((prevState) =>\n      prevState === \"register\" ? \"login\" : \"register\"\n    );\n  };\n\n  return (\n    <div className=\"constainer mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {formType === \"register\" ? (\n            <>\n              <h3 className=\"mb-4\">Register</h3>\n              <RegisterForm />\n              <p>\n                Alredy have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  Sign In\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <h3 className=\"mb-4\">Login</h3>\n              <LoginForm />\n              <p>\n                Dont have account?{\" \"}\n                <a role=\"button\" onClick={toggleFormType}>\n                  Sign Up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MeetingsCard = ({ completedMeetings }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div\n        className=\"\n                          card-body\n                          d-flex\n                          flex-column\n                          justify-content-center\n                          text-center\n                      \"\n      >\n        <h5 className=\"card-title\">\n          <span>Completed meetings</span>\n        </h5>\n\n        <h1 className=\"display-1\">{completedMeetings}</h1>\n      </div>\n    </div>\n  );\n};\nMeetingsCard.propTypes = {\n  completedMeetings: PropTypes.number\n};\n\nexport default MeetingsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst UserCard = ({ name, profession, rate, onEditUser }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <button\n          className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n          onClick={onEditUser}\n        >\n          <i className=\"bi bi-gear\"></i>\n        </button>\n        <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n          <img\n            src={`https://avatars.dicebear.com/api/avataaars/${(\n              Math.random() + 1\n            )\n              .toString(36)\n              .substring(7)}.svg`}\n            className=\"rounded-circle shadow-1-strong me-3\"\n            alt=\"avatar\"\n            width=\"65\"\n            height=\"65\"\n          />\n          <div className=\"mt-3\">\n            <h4>{name}</h4>\n            <p className=\"text-secondary mb-1\">{profession}</p>\n            <div className=\"text-muted\">\n              <i\n                className=\"bi bi-caret-down-fill text-primary\"\n                role=\"button\"\n              ></i>\n              <i className=\"bi bi-caret-up text-secondary\" role=\"button\"></i>\n              <span className=\"ms-2\">{rate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nUserCard.propTypes = {\n  name: PropTypes.string,\n  profession: PropTypes.string,\n  rate: PropTypes.number,\n  onEditUser: PropTypes.func\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Qualities = ({ color, name, _id }) => {\n  return (\n    <span key={_id} className={\"badge m-1 bg-\" + color}>\n      {name}\n    </span>\n  );\n};\nQualities.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired\n};\n\nexport default Qualities;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Qualities from \"./qualities\";\n\nconst QualitiesList = ({ qualities }) => {\n  return (\n    <>\n      {qualities.map((qualitie) => (\n        <Qualities key={qualitie._id} {...qualitie} />\n      ))}\n    </>\n  );\n};\nQualitiesList.propTypes = {\n  qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Qualities from \"../qualities\";\n\nconst QualitiesCard = ({ qualities }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n        <h5 className=\"card-title\">\n          <span>Qualities</span>\n        </h5>\n        <p className=\"card-text\">\n          <Qualities qualities={qualities} />\n        </p>\n      </div>\n    </div>\n  );\n};\nQualitiesCard.propTypes = {\n  qualities: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SelectForm from \"../../common/form/selectForm\";\n\nconst Comment = ({ options, userId, addNewComment, onChange, data }) => {\n  options = options.map((option) => ({ name: option.name, value: option._id }));\n\n  const handleChange = (target) => {\n    console.log(\"target handlechange\", target);\n\n    onChange(target);\n\n    // if (target.target?.name === \"exampleFormControlTextarea1\") {\n    //   setData((prevState) => ({ ...prevState, content: target.target.value }));\n    // } else {\n    //   setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n    // }\n  };\n\n  const handlePublish = () => {\n    addNewComment(data);\n  };\n\n  return (\n    <div className=\"card mb-2\">\n      <div className=\"card-body\">\n        <div>\n          <h2>New comment</h2>\n          <div className=\"mb-4\">\n            <SelectForm\n              name=\"userId\"\n              value={data.userId}\n              onChange={handleChange}\n              defaultOption=\"Выберите пользователя\"\n              options={options}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\n              Сообщение\n            </label>\n            <textarea\n              className=\"form-control\"\n              id=\"exampleFormControlTextarea1\"\n              name=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              value={data.content}\n              onChange={handleChange}\n            ></textarea>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={handlePublish}\n          >\n            Опубликовать\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nComment.propTypes = {\n  options: PropTypes.array,\n  userId: PropTypes.string,\n  addNewComment: PropTypes.func,\n  onChange: PropTypes.func,\n  data: PropTypes.obj\n};\n\nexport default Comment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ users, comments, removeComment }) => {\n  console.log(\"users comments++\", users);\n\n  const createdAt = (createdAt) => {\n    return createdAt;\n  };\n\n  const takeNameByUserId = (userId) => {\n    return users.filter((user) => user._id === userId)[0].name;\n  };\n\n  // if (comments && users) {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h2>Comments</h2>\n        <hr />\n\n        {comments.map((comment) => (\n          <div className=\"bg-light card-body mb-3\" key={comment._id}>\n            <div className=\"row\">\n              <div className=\"col\">\n                <div className=\"d-flex flex-start\">\n                  <img\n                    src={`https://avatars.dicebear.com/api/avataaars/${(\n                      Math.random() + 1\n                    )\n                      .toString(36)\n                      .substring(7)}.svg`}\n                    className=\"rounded-circle shadow-1-strong me-3\"\n                    alt=\"avatar\"\n                    width=\"65\"\n                    height=\"65\"\n                  />\n                  <div className=\"flex-grow-1 flex-shrink-1\">\n                    <div className=\"mb-4\">\n                      <div className=\"d-flex justify-content-between align-items-center\">\n                        <p className=\"mb-1\">\n                          {takeNameByUserId(comment.userId)}\n                          <span className=\"small\">\n                            {createdAt(comment.created_at)}\n                          </span>\n                        </p>\n                        <button\n                          className=\"btn btn-sm text-primary d-flex align-items-center\"\n                          onClick={() => removeComment(comment._id)}\n                        >\n                          <i className=\"bi bi-x-lg\"></i>\n                        </button>\n                      </div>\n                      <p className=\"small mb-0\">{comment.content}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  // }\n  // return \"Loading..\";\n};\nCommentsList.propTypes = {\n  userId: PropTypes.string,\n  comments: PropTypes.array,\n  users: PropTypes.array,\n  removeComment: PropTypes.func\n};\n\nexport default CommentsList;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../../API\";\nimport { useHistory } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport MeetingsCard from \"../../ui/cards/meetingsCard\";\nimport UserCard from \"../../ui/cards/userCard\";\nimport QualitiesCard from \"../../ui/cards/qualitiesCard\";\nimport Comment from \"../../ui/cards/comment\";\nimport CommentsList from \"../../ui/cards/commentsList\";\n\nconst UserPage = ({ userId }) => {\n  const history = useHistory();\n  const [user, setUser] = useState();\n  const [users, setUsers] = useState();\n\n  const [commentsForUser, setCommentsForUser] = useState();\n\n  const [newCommentData, setNewCommentData] = useState({\n    userId: \"\",\n    pageId: userId,\n    content: \"\"\n  });\n\n  useEffect(() => {\n    api.users.getById(userId).then((data) => {\n      setUser(data);\n    });\n    api.users.fetchAll().then((data) => {\n      setUsers(data);\n    });\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setCommentsForUser(data);\n    });\n  }, []);\n\n  console.log(\"commentsForUser\", commentsForUser);\n\n  const handleEditUser = () => {\n    history.push(`/users/${userId}/edit`);\n  };\n\n  console.log(\"userPage\", user);\n\n  const removeComment = (commentId) => {\n    console.log(\"commentId\", commentId);\n\n    api.comments.remove(commentId);\n\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setCommentsForUser(data);\n    });\n  };\n\n  const addNewComment = (data) => {\n    api.comments.add(data);\n    setNewCommentData({ userId: \"\", pageId: userId, content: \"\" });\n\n    // api.comments.fetchCommentsForUser(userId).then((data) => {\n    //   setCommentsForUser(data);\n    // });\n  };\n\n  const handleChange = (target) => {\n    if (target.target?.name === \"exampleFormControlTextarea1\") {\n      setNewCommentData((prevState) => ({\n        ...prevState,\n        content: target.target.value\n      }));\n    } else {\n      setNewCommentData((prevState) => ({\n        ...prevState,\n        [target.name]: target.value\n      }));\n    }\n  };\n\n  if (user) {\n    return (\n      <>\n        <div className=\"col-md-4 mb-3\">\n          <UserCard\n            name={user.name}\n            profession={user.profession.name}\n            rate={user.rate}\n            onEditUser={handleEditUser}\n          />\n          <QualitiesCard qualities={user.qualities} />\n          <MeetingsCard completedMeetings={user.completedMeetings} />\n        </div>\n\n        <div className=\"col-md-8\">\n          {users && (\n            <Comment\n              data={newCommentData}\n              options={users}\n              userId={userId}\n              addNewComment={addNewComment}\n              onChange={handleChange}\n            />\n          )}\n\n          {commentsForUser && users && (\n            <CommentsList\n              users={users}\n              comments={commentsForUser}\n              removeComment={removeComment}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n  return \"Loading...\";\n};\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pageCount = Math.ceil(itemsCount / pageSize);\n\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return (\n    <nav aria-label=\"...\">\n      <ul className=\"pagination\">\n        {pages.map((page) => {\n          return (\n            <li\n              key={page}\n              className={\n                \"page-item \" + (page === currentPage ? \"active\" : \"null\")\n              }\n            >\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (Array.isArray(items)) {\n    return (\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            key={item[valueProperty]}\n            className={\n              \"list-group-item\" + (item === selectedItem ? \" active\" : \"\")\n            }\n            onClick={() => onItemSelect(item)}\n            role=\"button\"\n          >\n            {item[contentProperty]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return (\n    <ul className=\"list-group\">\n      {Object.keys(items).map((item) => (\n        <li\n          key={items[item][valueProperty]}\n          className={\n            \"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\")\n          }\n          onClick={() => onItemSelect(items[item])}\n          role=\"button\"\n        >\n          {items[item][contentProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SearchStatus = ({ length }) => {\n  const renderPhrase = () => {\n    if (length > 1 && length < 5) return \"человека тусанут\";\n    return \"человек тусанет\";\n  };\n\n  return (\n    <h1>\n      <span className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\n        {length > 0\n          ? `${length} ${renderPhrase()} с тобой сегодня`\n          : \"Никто с тобой не тусанет\"}\n      </span>\n    </h1>\n  );\n};\nSearchStatus.propTypes = {\n  length: PropTypes.number.isRequired\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BookMark = ({ status, ...rest }) => {\n  return (\n    <button {...rest}>\n      <i className={\"bi bi-bookmark\" + (status ? \"-fill\" : \"\")}></i>\n    </button>\n  );\n};\n\nBookMark.propTypes = {\n  rest: PropTypes.array,\n  status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n  const handleSort = (item) => {\n    if (selectedSort.path === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({ path: item, order: \"asc\" });\n    }\n  };\n  const renderSortArrow = (currentPath) => {\n    if (selectedSort.path === currentPath) {\n      if (selectedSort.order === \"asc\") {\n        return <i className=\"bi bi-caret-up-fill\"></i>;\n      } else {\n        return <i className=\"bi bi-caret-down-fill\"></i>;\n      }\n    } else {\n      return null;\n    }\n  };\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            key={column}\n            onClick={\n              columns[column].path\n                ? () => handleSort(columns[column].path)\n                : undefined\n            }\n            {...{ role: columns[column].path && \"button\" }}\n            scope=\"col\"\n          >\n            {columns[column].name}\n            {renderSortArrow(columns[column].path)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component;\n      if (typeof component === \"function\") {\n        return component(item);\n      }\n      return component;\n    }\n    return _.get(item, columns[column].path);\n  };\n\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map((column) => (\n            <td key={column}>{renderContent(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n  return (\n    <table className=\"table\">\n      {children || (\n        <>\n          <TableHeader {...{ onSort, selectedSort, columns }} />\n\n          <TableBody {...{ data, columns }} />\n        </>\n      )}\n    </table>\n  );\n};\n\nTable.propTypes = {\n  onSort: PropTypes.func,\n  selectedSort: PropTypes.object,\n  columns: PropTypes.object,\n  data: PropTypes.array,\n  children: PropTypes.array\n};\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\n\nconst UsersTable = ({\n  users,\n  onSort,\n  selectedSort,\n  onToggleBookMark,\n  onDelete\n}) => {\n  const columns = {\n    name: {\n      path: \"name\",\n      name: \"Имя\",\n      component: (user) => <Link to={`/users/${user._id}`}>{user.name}</Link>\n    },\n    qualities: {\n      name: \"Качества\",\n      component: (user) => <Qualities qualities={user.qualities} />\n    },\n    professions: { path: \"profession.name\", name: \"Профессия\" },\n    completedMeetings: {\n      path: \"completedMeetings\",\n      name: \"Встретился, раз\"\n    },\n    rate: { path: \"rate\", name: \"Рейтинг\" },\n    bookmark: {\n      path: \"bookmark\",\n      name: \"Избранное\",\n      component: (user) => (\n        <BookMark\n          status={user.bookmark}\n          onClick={() => onToggleBookMark(user._id)}\n        />\n      )\n    },\n    delete: {\n      component: (user) => (\n        <button\n          onClick={() => {\n            onDelete(user._id);\n          }}\n          className=\"btn btn-danger btn-sm\"\n        >\n          delete\n        </button>\n      )\n    }\n  };\n  return (\n    <Table\n      onSort={onSort}\n      selectedSort={selectedSort}\n      columns={columns}\n      data={users}\n    />\n  );\n};\n\nUsersTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  onToggleBookMark: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\n\nexport default UsersTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport _ from \"lodash\";\nimport { useLocation } from \"react-router\";\nimport query from \"query-string\";\nimport Pagination from \"../../common/pagination\";\nimport { paginate } from \"../../../utils/paginate\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UsersTable from \"../../ui/usersTable\";\n\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfessions] = useState();\n  const [selectedProf, setSelectedProf] = useState();\n  const [searchData, setSearchData] = useState(\"\");\n\n  const location = useLocation();\n\n  const search = query.parse(location.search);\n\n  if (!location.search) {\n    search.sortBy = \"name\";\n    search.order = \"asc\";\n  }\n\n  const [sortBy, setSortBy] = useState({\n    path: search.sortBy,\n    order: search.order\n  });\n  const pageSize = 8;\n\n  const [users, setUsers] = useState();\n\n  useEffect(() => {\n    api.users.fetchAll().then((data) => {\n      setUsers(data);\n    });\n  }, []);\n\n  const handleDelete = (userId) => {\n    setUsers(\n      users.filter((user) => {\n        return user._id !== userId;\n      })\n    );\n  };\n\n  const handleToggleBookMark = (userId) => {\n    setUsers(\n      users.map((user) => {\n        if (user._id === userId) {\n          user.bookmark = !user.bookmark;\n        }\n        return user;\n      })\n    );\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchData]);\n\n  const handleProfessionSelect = (item) => {\n    setSearchData(\"\");\n    setSelectedProf(item);\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n\n  const handleChangeSearch = (e) => {\n    setSelectedProf(undefined);\n    setSearchData(e.target.value);\n  };\n  if (users) {\n    const filteredUsers = searchData\n      ? users.filter((user) => user.name.toLowerCase().includes(searchData))\n      : selectedProf\n      ? users.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf)\n        )\n      : users;\n\n    const count = Array.isArray(filteredUsers) && filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return (\n      <div className=\"d-flex\">\n        {professions && (\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n            <GroupList\n              selectedItem={selectedProf}\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n            />\n            <button onClick={clearFilter} className=\"btn btn-secondary mt-2\">\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className=\"d-flex flex-column\">\n          <SearchStatus length={count} />\n          <input\n            type=\"text\"\n            className=\"w-100 mx-auto\"\n            name=\"searchData\"\n            value={searchData}\n            onChange={handleChangeSearch}\n            placeholder=\"Search...\"\n          ></input>\n\n          {count > 0 && (\n            <UsersTable\n              users={usersCrop}\n              onSort={handleSort}\n              selectedSort={sortBy}\n              onDelete={handleDelete}\n              onToggleBookMark={handleToggleBookMark}\n            />\n          )}\n          <div className=\"d-flex justify-content-center\">\n            <Pagination\n              itemsCount={count}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"Loading...\";\n};\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../../API\";\nimport { validator } from \"../../../utils/validator\";\n\nimport TextField from \"../../common/form/textField\";\nimport SelectForm from \"../../common/form/selectForm\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\n\nconst EditUserPage = ({ userId }) => {\n  const history = useHistory();\n\n  const [data, setData] = useState();\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const [professions, setProfessions] = useState();\n\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data);\n    });\n    api.qualities.fetchAll().then((data) => {\n      setQualities(data);\n    });\n\n    api.users.getById(userId).then((data) => {\n      setData({\n        ...data,\n        sex: data.sex ? data.sex : \"male\",\n        email: data.email ? data.email : \"\"\n      });\n    });\n  }, []);\n\n  const validate = () => {\n    const errors = validator(data, validateConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const validateConfig = {\n    name: { isRequired: { message: \"Имя обязательнао для заполнения\" } },\n    email: {\n      isRequired: { message: \"Электронная почта обязательна для заполнения\" },\n      isEmail: { message: \"Электронная почта введена не корректно\" }\n    }\n    // profession: {\n    //   isRequired: { message: \"Обязательно выберите вашу профессию\" }\n    // }\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  const editUserData = () => {\n    const professionsArray =\n      !Array.isArray(professions) && typeof professions === \"object\"\n        ? Object.keys(professions).map((profession) => ({\n            name: professions[profession].name,\n            _id: professions[profession]._id\n          }))\n        : professions;\n\n    const qualitiesArray =\n      !Array.isArray(qualities) && typeof qualities === \"object\"\n        ? Object.keys(qualities).map((qualitie) => ({\n            name: qualities[qualitie].name,\n            _id: qualities[qualitie]._id,\n            color: qualities[qualitie].color\n          }))\n        : qualities;\n\n    let userData = {};\n\n    const userQualities =\n      Object.keys(data.qualities[0]).length > 2\n        ? data.qualities\n        : data.qualities.map((userQualitie) => {\n            console.log(\n              qualitiesArray.filter(\n                (qualitie) => qualitie._id === userQualitie.value\n              )[0]\n            );\n\n            return qualitiesArray.filter(\n              (qualitie) => qualitie._id === userQualitie.value\n            )[0];\n          });\n    console.log(\"userQualities\", userQualities);\n\n    userData = {\n      ...data,\n      profession:\n        typeof data.profession === \"object\"\n          ? data.profession\n          : professionsArray.filter((prof) => prof._id === data.profession)[0],\n      qualities: userQualities\n    };\n\n    return userData;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n\n    const edituserdata = editUserData();\n\n    const newData = api.users.update(userId, edituserdata);\n    console.log(\"updated api\", newData);\n\n    history.replace(`/users/${userId}`);\n  };\n\n  //   const handleUpdate = () => {\n  //     // const newData = api.users.update(userId, data);\n  //     // console.log(\"newData\", newData);\n\n  //     history.push(`/users/${userId}`);\n  //   };\n\n  const handleGoBack = () => {\n    history.push(`/users/${userId}`);\n  };\n\n  if (data) {\n    return (\n      <div className=\"constainer mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 shadow p-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary mb-4\"\n              onClick={handleGoBack}\n            >\n              <i className=\"bi bi-arrow-left m-1\" />\n              Назад\n            </button>\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label=\"Электронная почта\"\n                type=\"text\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectForm\n                label=\"Выберите вашу профессию: \"\n                name=\"profession\"\n                onChange={handleChange}\n                defaultOption=\"Chose...\"\n                options={professions}\n                value={data.profession._id}\n                error={errors.profession}\n              />\n              <RadioField\n                label=\"Выберите ваш пол: \"\n                name=\"sex\"\n                value={data.sex}\n                options={[\n                  { name: \"Male\", value: \"male\" },\n                  { name: \"Female\", value: \"female\" }\n                ]}\n                onChange={handleChange}\n              />\n              <MultiSelectField\n                options={qualities}\n                defaultValue={data.qualities}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качества:\"\n              />\n              <button\n                // type=\"button\"\n                onClick={handleSubmit}\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n              >\n                Обновить\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"Loading...\";\n};\nEditUserPage.propTypes = {\n  userId: PropTypes.string\n};\nexport default EditUserPage;\n","import React from \"react\";\nimport UserPage from \"../components/page/userPage/\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport { useParams } from \"react-router\";\n\nconst Users = () => {\n  const params = useParams();\n  const { userId, edit } = params;\n\n  if (userId) {\n    return edit ? (\n      <EditUserPage userId={userId} />\n    ) : (\n      <div className=\"container\">\n        <div className=\"row gutters-sm\">\n          <UserPage userId={userId} />\n        </div>\n      </div>\n    );\n  }\n  return <UsersListPage />;\n};\n\nexport default Users;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/ui/navBar\";\nimport Main from \"../layouts/main\";\nimport Login from \"../layouts/login\";\nimport Users from \"../layouts/users\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/login/:type?\" component={Login} />\n        <Route path=\"/users/:userId?/:edit?\" component={Users} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import Users from \"./components/users\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}